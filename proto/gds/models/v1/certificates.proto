syntax="proto3";

package gds.models.v1;
option go_package = "github.com/trisacrypto/directory/pkg/models/v1;models";

import "trisa/gds/models/v1beta1/ca.proto";


enum CertificateRequestState {
    INITIALIZED = 0;
    READY_TO_SUBMIT = 1;
    PROCESSING = 2;
    DOWNLOADING = 3;
    DOWNLOADED = 4;
    COMPLETED = 5;
    CR_REJECTED = 6;
    CR_ERRORED = 7;
}

// Certificate requests are maintained separately from the VASP record since they should
// not be replicated. E.g. every directory process is responsible for certificate
// issuance and only public keys and certificate metadata should be exchanged between
// directories.
message CertificateRequest {
    // A unique identifier generated by the directory service, should be a globally
    // unique identifier generated by the replica specified in requesting_replica.
    string id = 1;

    // VASP information for the request
    string vasp = 2;
    string common_name = 3;

    // Request pipeline status
    CertificateRequestState status = 4;

    // Sectigo create single certificate batch metadata
    int64 authority_id = 5;
    int64 batch_id = 6;
    string batch_name = 7;
    string batch_status = 8;
    int64 order_number = 9;
    string creation_date = 10;
    string profile = 11;
    string reject_reason = 12;

    // Generic parameters used for making requests to certificate issuing services
    map<string, string> params = 13;

    // Optional list of alternate dns names in addition to the common name
    repeated string dns_names = 14;

    // Logging information timestamps
    string created = 15;
    string modified = 16;

    // Log of historical request states
    repeated CertificateRequestLogEntry audit_log = 17;

    // The certificate ID downloaded from the request, if completed successfully
    string certificate = 18;
}

enum CertificateState {
    ISSUED = 0;
    EXPIRED = 1;
    REVOKED = 2;
}

// Certificate embeds a TRISA Certificate into a record that can be stored in the
// database for certificate management.
message Certificate {
    // A unique identifier generated by the directory service for storage
    string id = 1;

    // CertificateRequest that this certificate is associated with
    string request = 2;

    // VASP that this certificate belongs to
    string vasp = 3;

    // Current status of the certificate
    CertificateState status = 4;

    // Certificate details
    trisa.gds.models.v1beta1.Certificate details = 5;
}

// CertificateRequestLogEntry contains information about the state of a certificate request.
message CertificateRequestLogEntry {
    // RFC3339 timestamp
    string timestamp = 1;

    // Previous request state (handled internally) and current request state
    CertificateRequestState previous_state = 2;
    CertificateRequestState current_state = 3;

    // Description of the current state of the certificate request
    string description = 4;

    // Email address of the Admin who made the state change, "automated" if the state
    // change happened automatically
    string source = 5;
}