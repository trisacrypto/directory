syntax="proto3";

package bff.models.v1;
option go_package = "github.com/trisacrypto/directory/pkg/bff/db/models/v1;models";

import "ivms101/ivms101.proto";
import "trisa/gds/models/v1beta1/models.proto";

// The Organization document contains VASP-specific information for a single VASP record
// in the directory service. This document differs in that it stores information
// relevant to the BFF and should not be used to duplicate storage in the directory.
message Organization {
    // BFF Unique Identifier and Record Information
    string id = 1;
    string name = 2;
    string logo_url = 3;

    // Directory Registrations for Lookups
    // TODO: populate these details in the Registration Endpoint
    DirectoryRecord testnet = 10;
    DirectoryRecord mainnet = 11;

    reserved 12; // Reserved for collaborators

    // Registration Form
    RegistrationForm registration = 13;

    // Metadata as RFC3339Nano Timestamps
    string created = 14;
    string modified = 15;
}

// DirectoryRecord contains the information needed to lookup a VASP in a directory service.
message DirectoryRecord {
    string id = 1;
    string registered_directory = 2;
    string common_name = 3;

    // RFC 3339 timestamp -- if set, the form has been submitted without error
    string submitted = 15;
}

// RegistrationForm is an extension of the TRISA GDS RegistrationRequest with BFF fields.
message RegistrationForm {
    // Business information
    string website = 1;
    trisa.gds.models.v1beta1.BusinessCategory business_category = 2;
    repeated string vasp_categories = 3;
    string established_on = 4;

    // IVMS 101 Legal Person record
    ivms101.LegalPerson entity = 11;

    // Directory Record contacts
    trisa.gds.models.v1beta1.Contacts contacts = 12;

    // TRIXO Form
    trisa.gds.models.v1beta1.TRIXOQuestionnaire trixo = 13;

    // Network-specific information and submission details
    NetworkDetails testnet = 14;
    NetworkDetails mainnet = 15;
}

// NetworkDetails contains directory-service specific submission information such as the
// certificate request and information about when the registration form was submitted.
message NetworkDetails {
    // Certificate request information
    string common_name = 1;
    string endpoint = 2;
    repeated string dns_names = 3;
}

// Announcements are made by network administrators to inform all TRISA members of
// important events, maintenance, or milestones. These are broadcast from the BFF so
// that all members receive the same announcement.
message Announcement {
    string id = 1;
    string title = 2;
    string body = 3;
    string post_date = 4;
    string author = 5;

    // Metadata as RFC3339Nano Timestamps
    string created = 14;
    string modified = 15;
}

// Announcements are stored in months to enable fast retrieval of the latest
// announcements in a specific time range without a reversal traversal of time-ordered
// anncouncement objects. Note that the annoucements are stored in a slice instead of
// a map to reduce data storage overhead. Accessing a specific announcement requires
// iterating over the annoucements, but the number of annoucements in a month should not
// be unbounded, so this cost is acceptable for data storage performance.
message AnnouncementMonth {
    string date = 1;
    repeated Announcement announcements = 2;

    // Metadata as RFC3339Nano Timestamps
    string created = 14;
    string modified = 15;
}
