{"version":3,"file":"redux-persist.min.js","sources":["../src/constants.ts","../src/stateReconciler/autoMergeLevel1.ts","../src/createPersistoid.ts","../src/getStoredState.ts","../src/purgeStoredState.ts","../src/persistReducer.ts","../node_modules/tslib/tslib.es6.js","../node_modules/redux/es/redux.js","../src/stateReconciler/autoMergeLevel2.ts","../src/persistStore.ts","../src/createMigrate.ts","../src/createTransform.ts","../src/persistCombineReducers.ts"],"sourcesContent":["export const KEY_PREFIX = 'persist:'\nexport const FLUSH = 'persist/FLUSH'\nexport const REHYDRATE = 'persist/REHYDRATE'\nexport const PAUSE = 'persist/PAUSE'\nexport const PERSIST = 'persist/PERSIST'\nexport const PURGE = 'persist/PURGE'\nexport const REGISTER = 'persist/REGISTER'\nexport const DEFAULT_VERSION = -1\n","/*\n  autoMergeLevel1: \n    - merges 1 level of substate\n    - skips substate if already modified\n*/\n\nimport type { PersistConfig } from '../types'\nimport { KeyAccessState } from '../types'\n\nexport default function autoMergeLevel1<S extends KeyAccessState>(\n  inboundState: S,\n  originalState: S,\n  reducedState: S,\n  { debug }: PersistConfig<S>\n): S {\n  const newState = { ...reducedState }\n  // only rehydrate if inboundState exists and is an object\n  if (inboundState && typeof inboundState === 'object') {\n    const keys: (keyof S)[] = Object.keys(inboundState)\n    keys.forEach(key => {\n      // ignore _persist data\n      if (key === '_persist') return\n      // if reducer modifies substate, skip auto rehydration\n      if (originalState[key] !== reducedState[key]) {\n        if (process.env.NODE_ENV !== 'production' && debug)\n          console.log(\n            'reduxjs-toolkit-persist/stateReconciler: sub state for key `%s` modified, skipping.',\n            key\n          )\n        return\n      }\n      // otherwise hard set the new value\n      newState[key] = inboundState[key]\n    })\n  }\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    debug &&\n    inboundState &&\n    typeof inboundState === 'object'\n  )\n    console.log(\n      `reduxjs-toolkit-persist/stateReconciler: rehydrated keys '${Object.keys(\n        inboundState\n      ).join(', ')}'`\n    )\n\n  return newState\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { KEY_PREFIX } from './constants'\n\nimport type { Persistoid, PersistConfig } from './types'\nimport { KeyAccessState } from './types'\n\nexport default function createPersistoid(config: PersistConfig<any>): Persistoid {\n  // defaults\n  const blacklist: string[] | null = config.blacklist || null\n  const whitelist: string[] | null = config.whitelist || null\n  const transforms = config.transforms || []\n  const throttle = config.throttle || 0\n  const storageKey = `${\n    config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX\n  }${config.key}`\n  const storage = config.storage\n  let serialize: (x: any) => any\n  if (config.serialize === false) {\n    serialize = (x: any) => x\n  } else if (typeof config.serialize === 'function') {\n    serialize = config.serialize\n  } else {\n    serialize = defaultSerialize\n  }\n  const writeFailHandler = config.writeFailHandler || null\n\n  // initialize stateful values\n  let lastState: KeyAccessState = {}\n  const stagedState: KeyAccessState = {}\n  const keysToProcess: string[] = []\n  let timeIterator: any = null\n  let writePromise: Promise<any> | null = null\n\n  const update = (state: KeyAccessState) => {\n    // add any changed keys to the queue\n    Object.keys(state).forEach(key => {\n      if (!passWhitelistBlacklist(key)) return // is keyspace ignored? noop\n      if (lastState[key] === state[key]) return // value unchanged? noop\n      if (keysToProcess.indexOf(key) !== -1) return // is key already queued? noop\n      keysToProcess.push(key) // add key to queue\n    })\n\n    //if any key is missing in the new state which was present in the lastState,\n    //add it for processing too\n    Object.keys(lastState).forEach(key => {\n      if (\n        state[key] === undefined &&\n        passWhitelistBlacklist(key) &&\n        keysToProcess.indexOf(key) === -1 &&\n        lastState[key] !== undefined\n      ) {\n        keysToProcess.push(key)\n      }\n    })\n\n    // start the time iterator if not running (read: throttle)\n    if (timeIterator === null) {\n      timeIterator = setInterval(processNextKey, throttle)\n    }\n\n    lastState = state\n  }\n\n  function processNextKey() {\n    if (keysToProcess.length === 0) {\n      if (timeIterator) clearInterval(timeIterator)\n      timeIterator = null\n      return\n    }\n\n    const key: any = keysToProcess.shift()\n    if (key === undefined) {\n      return\n    }\n    const endState = transforms.reduce((subState, transformer) => {\n      return transformer.in(subState, key, lastState)\n    }, lastState[key])\n\n    if (endState !== undefined) {\n      try {\n        stagedState[key] = serialize(endState)\n      } catch (err) {\n        console.error(\n          'reduxjs-toolkit-persist/createPersistoid: error serializing state',\n          err\n        )\n      }\n    } else {\n      //if the endState is undefined, no need to persist the existing serialized content\n      delete stagedState[key]\n    }\n\n    if (keysToProcess.length === 0) {\n      writeStagedState()\n    }\n  }\n\n  function writeStagedState() {\n    // cleanup any removed keys just before write.\n    Object.keys(stagedState).forEach(key => {\n      if (lastState[key] === undefined) {\n        delete stagedState[key]\n      }\n    })\n\n    writePromise = storage\n      .setItem(storageKey, serialize(stagedState))\n      .catch(onWriteFail)\n  }\n\n  function passWhitelistBlacklist(key: string) {\n    if (whitelist && whitelist.indexOf(key) === -1 && key !== '_persist')\n      return false\n    if (blacklist && blacklist.indexOf(key) !== -1) return false\n    return true\n  }\n\n  function onWriteFail(err: any) {\n    // @TODO add fail handlers (typically storage full)\n    if (writeFailHandler) writeFailHandler(err)\n    if (err && process.env.NODE_ENV !== 'production') {\n      console.error('Error storing data', err)\n    }\n  }\n\n  const flush = () => {\n    while (keysToProcess.length !== 0) {\n      processNextKey()\n    }\n    return writePromise || Promise.resolve()\n  }\n\n  // return `persistoid`\n  return {\n    update,\n    flush,\n  }\n}\n\n// @NOTE in the future this may be exposed via config\nfunction defaultSerialize(data: any) {\n  return JSON.stringify(data)\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { KeyAccessState, PersistConfig } from './types'\n\nimport { KEY_PREFIX } from './constants'\n\nexport default function getStoredState(\n  config: PersistConfig<any>\n): Promise<any | void> {\n  const transforms = config.transforms || []\n  const storageKey = `${\n    config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX\n  }${config.key}`\n  const storage = config.storage\n  const debug = config.debug\n  let deserialize: (x: any) => any\n  if (config.deserialize === false) {\n    deserialize = (x: any) => x\n  } else if (typeof config.deserialize === 'function') {\n    deserialize = config.deserialize\n  } else {\n    deserialize = defaultDeserialize\n  }\n  return storage.getItem(storageKey).then((serialized: any) => {\n    if (!serialized) return undefined\n    else {\n      try {\n        const state: KeyAccessState = {}\n        const rawState = deserialize(serialized)\n        Object.keys(rawState).forEach(key => {\n          state[key] = transforms.reduceRight((subState, transformer) => {\n            return transformer.out(subState, key, rawState)\n          }, deserialize(rawState[key]))\n        })\n        return state\n      } catch (err) {\n        if (process.env.NODE_ENV !== 'production' && debug)\n          console.log(\n            `reduxjs-toolkit-persist/getStoredState: Error restoring data ${serialized}`,\n            err\n          )\n        throw err\n      }\n    }\n  })\n}\n\nfunction defaultDeserialize(serial: string) {\n  return JSON.parse(serial)\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { PersistConfig } from './types'\n\nimport { KEY_PREFIX } from './constants'\n\nexport default function purgeStoredState(config: PersistConfig<any>):any {\n  const storage = config.storage\n  const storageKey = `${\n    config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX\n  }${config.key}`\n  return storage.removeItem(storageKey, warnIfRemoveError)\n}\n\nfunction warnIfRemoveError(err: any) {\n  if (err && process.env.NODE_ENV !== 'production') {\n    console.error(\n      'reduxjs-toolkit-persist/purgeStoredState: Error purging data stored state',\n      err\n    )\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  Action, AnyAction, Reducer\n} from '@reduxjs/toolkit'\n\nimport {\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REHYDRATE,\n  DEFAULT_VERSION,\n} from './constants'\n\nimport type {\n  PersistConfig,\n  PersistState,\n  Persistoid,\n} from './types'\n\nimport autoMergeLevel1 from './stateReconciler/autoMergeLevel1'\nimport createPersistoid from './createPersistoid'\nimport defaultGetStoredState from './getStoredState'\nimport purgeStoredState from './purgeStoredState'\n\ntype PersistPartial = { _persist: PersistState } | any;\nconst DEFAULT_TIMEOUT = 5000\n/*\n  @TODO add validation / handling for:\n  - persisting a reducer which has nested _persist\n  - handling actions that fire before reydrate is called\n*/\nexport default function persistReducer<S, A extends Action>(\n  config: PersistConfig<S>,\n  baseReducer: Reducer<S, A>\n): Reducer<S & PersistPartial, AnyAction> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!config) throw new Error('config is required for persistReducer')\n    if (!config.key) throw new Error('key is required in persistor config')\n    if (!config.storage)\n      throw new Error(\n        \"reduxjs-toolkit-persist: config.storage is required. Try using one of the provided storage engines `import storage from 'reduxjs-toolkit-persist/lib/storage'`\"\n      )\n  }\n\n  const version =\n    config.version !== undefined ? config.version : DEFAULT_VERSION\n  const stateReconciler =\n    config.stateReconciler === undefined\n      ? autoMergeLevel1\n      : config.stateReconciler\n  const getStoredState = config.getStoredState || defaultGetStoredState\n  const timeout =\n    config.timeout !== undefined ? config.timeout : DEFAULT_TIMEOUT\n  let _persistoid: Persistoid | null = null\n  let _purge = false\n  let _paused = true\n  const conditionalUpdate = (state: any) => {\n    // update the persistoid only if we are rehydrated and not paused\n    state._persist.rehydrated &&\n      _persistoid &&\n      !_paused &&\n      _persistoid.update(state)\n    return state\n  }\n\n  return (state: any, action: any) => {\n    const { _persist, ...rest } = state || {}\n    const restState: S = rest\n\n    if (action.type === PERSIST) {\n      let _sealed = false\n      const _rehydrate = (payload: any, err?: Error) => {\n        // dev warning if we are already sealed\n        if (process.env.NODE_ENV !== 'production' && _sealed)\n          console.error(\n            `reduxjs-toolkit-persist: rehydrate for \"${\n              config.key\n            }\" called after timeout.`,\n            payload,\n            err\n          )\n\n        // only rehydrate if we are not already sealed\n        if (!_sealed) {\n          action.rehydrate(config.key, payload, err)\n          _sealed = true\n        }\n      }\n      timeout &&\n        setTimeout(() => {\n          !_sealed &&\n            _rehydrate(\n              undefined,\n              new Error(\n                `reduxjs-toolkit-persist: persist timed out for persist key \"${\n                  config.key\n                }\"`\n              )\n            )\n        }, timeout)\n\n      // @NOTE PERSIST resumes if paused.\n      _paused = false\n\n      // @NOTE only ever create persistoid once, ensure we call it at least once, even if _persist has already been set\n      if (!_persistoid) _persistoid = createPersistoid(config)\n\n      // @NOTE PERSIST can be called multiple times, noop after the first\n      if (_persist) {\n        // We still need to call the base reducer because there might be nested\n        // uses of persistReducer which need to be aware of the PERSIST action\n        return {\n          ...baseReducer(restState, action),\n          _persist,\n        };\n      }\n\n      if (\n        typeof action.rehydrate !== 'function' ||\n        typeof action.register !== 'function'\n      )\n        throw new Error(\n          'reduxjs-toolkit-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.'\n        )\n\n      action.register(config.key)\n\n      getStoredState(config).then(\n        restoredState => {\n          if (restoredState) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const migrate = config.migrate || ((s, _) => Promise.resolve(s))\n            migrate(restoredState as any, version).then(\n              migratedState => {\n                _rehydrate(migratedState)\n              },\n              migrateErr => {\n                if (process.env.NODE_ENV !== 'production' && migrateErr)\n                  console.error('redux-toolkit-persist: migration error', migrateErr)\n                _rehydrate(undefined, migrateErr)\n              }\n            )\n          }\n        },\n        err => {\n          _rehydrate(undefined, err)\n        }\n      )\n\n      return {\n        ...baseReducer(restState, action),\n        _persist: { version, rehydrated: false },\n      }\n    } else if (action.type === PURGE) {\n      _purge = true\n      action.result(purgeStoredState(config))\n      return {\n        ...baseReducer(restState, action),\n        _persist,\n      }\n    } else if (action.type === FLUSH) {\n      action.result(_persistoid && _persistoid.flush())\n      return {\n        ...baseReducer(restState, action),\n        _persist,\n      }\n    } else if (action.type === PAUSE) {\n      _paused = true\n    } else if (action.type === REHYDRATE) {\n      // noop on restState if purging\n      if (_purge)\n        return {\n          ...restState,\n          _persist: { ..._persist, rehydrated: true },\n        }\n\n      // @NOTE if key does not match, will continue to default else below\n      if (action.key === config.key) {\n        const reducedState = baseReducer(restState, action)\n        const inboundState = action.payload\n        // only reconcile state if stateReconciler and inboundState are both defined\n        const reconciledRest: S =\n          stateReconciler !== false && inboundState !== undefined\n            ? stateReconciler(inboundState, state, reducedState, config)\n            : reducedState\n\n        const newState = {\n          ...reconciledRest,\n          _persist: { ..._persist, rehydrated: true },\n        }\n        return conditionalUpdate(newState)\n      }\n    }\n\n    // if we have not already handled PERSIST, straight passthrough\n    if (!_persist) return baseReducer(state, action)\n\n    // run base reducer:\n    // is state modified ? return original : return updated\n    const newState = baseReducer(restState, action)\n    if (newState === restState) return state\n    return conditionalUpdate({ ...newState, _persist })\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","/*\n  autoMergeLevel2: \n    - merges 2 level of substate\n    - skips substate if already modified\n    - this is essentially redux-perist v4 behavior\n*/\n\nimport type { PersistConfig } from '../types'\nimport { KeyAccessState } from '../types'\n\nexport default function autoMergeLevel2<S extends KeyAccessState>(\n  inboundState: S,\n  originalState: S,\n  reducedState: S,\n  { debug }: PersistConfig<S>\n): S {\n  const newState = { ...reducedState }\n  // only rehydrate if inboundState exists and is an object\n  if (inboundState && typeof inboundState === 'object') {\n    const keys: (keyof S)[] = Object.keys(inboundState)\n    keys.forEach(key => {\n      // ignore _persist data\n      if (key === '_persist') return\n      // if reducer modifies substate, skip auto rehydration\n      if (originalState[key] !== reducedState[key]) {\n        if (process.env.NODE_ENV !== 'production' && debug)\n          console.log(\n            'reduxjs-toolkit-persist/stateReconciler: sub state for key `%s` modified, skipping.',\n            key\n          )\n        return\n      }\n      if (isPlainEnoughObject(reducedState[key])) {\n        // if object is plain enough shallow merge the new values (hence \"Level2\")\n        newState[key] = { ...newState[key], ...inboundState[key] }\n        return\n      }\n      // otherwise hard set\n      newState[key] = inboundState[key]\n    })\n  }\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    debug &&\n    inboundState &&\n    typeof inboundState === 'object'\n  )\n    console.log(\n      `reduxjs-toolkit-persist/stateReconciler: rehydrated keys '${Object.keys(\n        inboundState\n      ).join(', ')}'`\n    )\n\n  return newState\n}\n\nfunction isPlainEnoughObject(o: unknown) {\n  return o !== null && !Array.isArray(o) && typeof o === 'object'\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type {\n  Persistor,\n  PersistorOptions,\n  PersistorState,\n} from './types'\n\nimport { AnyAction, createStore, Store } from '@reduxjs/toolkit'\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from './constants'\n\ntype BoostrappedCb = () => any;\n\nconst initialState: PersistorState = {\n  registry: [],\n  bootstrapped: false,\n}\n\nconst persistorReducer = (state = initialState, action: AnyAction) => {\n  const firstIndex = state.registry.indexOf(action.key)\n  const registry = [...state.registry]\n  switch (action.type) {\n    case REGISTER:\n      return { ...state, registry: [...state.registry, action.key] }\n    case REHYDRATE:\n      registry.splice(firstIndex, 1)\n      return { ...state, registry, bootstrapped: registry.length === 0 }\n    default:\n      return state\n  }\n}\n\ninterface OptionToTestObject {\n  [key: string]: any;\n}\n\nexport default function persistStore(\n  store: Store,\n  options?: PersistorOptions,\n  cb?: BoostrappedCb\n): Persistor {\n  // help catch incorrect usage of passing PersistConfig in as PersistorOptions\n  if (process.env.NODE_ENV !== 'production') {\n    const optionsToTest: OptionToTestObject = options || {}\n    const bannedKeys = [\n      'blacklist',\n      'whitelist',\n      'transforms',\n      'storage',\n      'keyPrefix',\n      'migrate',\n    ]\n    bannedKeys.forEach(k => {\n      if (optionsToTest[k])\n        console.error(\n          `reduxjs-toolkit-persist: invalid option passed to persistStore: \"${k}\". You may be incorrectly passing persistConfig into persistStore, whereas it should be passed into persistReducer.`\n        )\n    })\n  }\n  let boostrappedCb = cb || false\n\n  const _pStore = createStore(\n    persistorReducer,\n    initialState,\n    options && options.enhancer ? options.enhancer : undefined\n  )\n  const register = (key: string) => {\n    _pStore.dispatch({\n      type: REGISTER,\n      key,\n    })\n  }\n\n  const rehydrate = (key: string, payload: Record<string, unknown>, err: any) => {\n    const rehydrateAction = {\n      type: REHYDRATE,\n      payload,\n      err,\n      key,\n    }\n    // dispatch to `store` to rehydrate and `persistor` to track result\n    store.dispatch(rehydrateAction)\n    _pStore.dispatch(rehydrateAction)\n    if (typeof boostrappedCb === \"function\" && persistor.getState().bootstrapped) {\n      boostrappedCb()\n      boostrappedCb = false\n    }\n  }\n\n  const persistor: Persistor = {\n    ..._pStore,\n    purge: () => {\n      const results: Array<any> = []\n      store.dispatch({\n        type: PURGE,\n        result: (purgeResult: any) => {\n          results.push(purgeResult)\n        },\n      })\n      return Promise.all(results)\n    },\n    flush: () => {\n      const results: Array<any> = []\n      store.dispatch({\n        type: FLUSH,\n        result: (flushResult: any) => {\n          results.push(flushResult)\n        },\n      })\n      return Promise.all(results)\n    },\n    pause: () => {\n      store.dispatch({\n        type: PAUSE,\n      })\n    },\n    persist: () => {\n      store.dispatch({ type: PERSIST, register, rehydrate })\n    },\n  }\n\n  if (!(options && options.manualPersist)){\n    persistor.persist()\n  }\n\n  return persistor\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { DEFAULT_VERSION } from './constants'\n\nimport type { PersistedState, PersistMigrate, MigrationManifest } from './types'\n\nexport default function createMigrate(\n  migrations: MigrationManifest,\n  config?: { debug: boolean }\n): (state: PersistedState, currentVersion: number) => Promise<PersistedState> {\n  const { debug } = config || {}\n  return function(\n    state: PersistedState,\n    currentVersion: number\n  ): Promise<PersistedState> {\n    if (!state) {\n      if (process.env.NODE_ENV !== 'production' && debug)\n        console.log('reduxjs-toolkit-persist: no inbound state, skipping migration')\n      return Promise.resolve(undefined)\n    }\n\n    const inboundVersion: number =\n      state._persist && state._persist.version !== undefined\n        ? state._persist.version\n        : DEFAULT_VERSION\n    if (inboundVersion === currentVersion) {\n      if (process.env.NODE_ENV !== 'production' && debug)\n        console.log('reduxjs-toolkit-persist: versions match, noop migration')\n      return Promise.resolve(state)\n    }\n    if (inboundVersion > currentVersion) {\n      if (process.env.NODE_ENV !== 'production')\n        console.error('reduxjs-toolkit-persist: downgrading version is not supported')\n      return Promise.resolve(state)\n    }\n\n    const migrationKeys = Object.keys(migrations)\n      .map(ver => parseInt(ver))\n      .filter(key => currentVersion >= key && key > inboundVersion)\n      .sort((a, b) => a - b)\n\n    if (process.env.NODE_ENV !== 'production' && debug)\n      console.log('reduxjs-toolkit-persist: migrationKeys', migrationKeys)\n    try {\n      const migratedState: any = migrationKeys.reduce((state: any, versionKey) => {\n        if (process.env.NODE_ENV !== 'production' && debug)\n          console.log(\n            'reduxjs-toolkit-persist: running migration for versionKey',\n            versionKey\n          )\n        return migrations[versionKey](state)\n      }, state)\n      return Promise.resolve(migratedState)\n    } catch (err) {\n      return Promise.reject(err)\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\ntype TransformConfig = {\n  whitelist?: Array<string>,\n  blacklist?: Array<string>,\n}\n\nexport default function createTransform(\n  // @NOTE inbound: transform state coming from redux on its way to being serialized and stored\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  inbound: Function,\n  // @NOTE outbound: transform state coming from storage, on its way to be rehydrated into redux\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  outbound: Function,\n  config: TransformConfig = {}\n): any {\n  const whitelist = config.whitelist || null\n  const blacklist = config.blacklist || null\n\n  function whitelistBlacklistCheck(key: string) {\n    if (whitelist && whitelist.indexOf(key) === -1) return true\n    if (blacklist && blacklist.indexOf(key) !== -1) return true\n    return false\n  }\n\n  return {\n    in: (state: Record<string, unknown>, key: string, fullState: Record<string, unknown>) =>\n      !whitelistBlacklistCheck(key) && inbound\n        ? inbound(state, key, fullState)\n        : state,\n    out: (state: Record<string, unknown>, key: string, fullState: Record<string, unknown>) =>\n      !whitelistBlacklistCheck(key) && outbound\n        ? outbound(state, key, fullState)\n        : state,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Action, AnyAction, CombinedState, combineReducers, Reducer, ReducersMapObject } from '@reduxjs/toolkit'\nimport persistReducer from './persistReducer'\nimport autoMergeLevel2 from './stateReconciler/autoMergeLevel2'\n\nimport type { \n  PersistConfig\n} from './types'\n\n// combineReducers + persistReducer with stateReconciler defaulted to autoMergeLevel2\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport default function persistCombineReducers<S, A extends Action>(\n  config: PersistConfig<any>,\n  reducers: ReducersMapObject<CombinedState<S>, Action<any>>\n): Reducer<any, AnyAction> {\n  config.stateReconciler =\n    config.stateReconciler === undefined\n      ? autoMergeLevel2\n      : config.stateReconciler\n  return persistReducer(config, combineReducers(reducers))\n}\n"],"names":["KEY_PREFIX","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","autoMergeLevel1","inboundState","originalState","reducedState","debug","newState","Object","keys","forEach","key","process","env","NODE_ENV","console","log","join","createPersistoid","config","blacklist","whitelist","transforms","throttle","storageKey","undefined","keyPrefix","storage","serialize","x","defaultSerialize","writeFailHandler","lastState","stagedState","keysToProcess","timeIterator","writePromise","processNextKey","length","clearInterval","shift","endState","reduce","subState","transformer","in","err","error","setItem","catch","onWriteFail","passWhitelistBlacklist","indexOf","update","state","push","setInterval","flush","Promise","resolve","data","JSON","stringify","getStoredState","deserialize","defaultDeserialize","getItem","then","serialized","rawState","reduceRight","out","serial","parse","purgeStoredState","removeItem","warnIfRemoveError","persistReducer","baseReducer","Error","version","stateReconciler","defaultGetStoredState","timeout","_persistoid","_purge","_paused","conditionalUpdate","_persist","rehydrated","action","_a","restState","s","e","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","type","_sealed","_rehydrate","payload","rehydrate","setTimeout","register","restoredState","migrate","_","migratedState","migrateErr","result","reconciledRest","formatProdErrorMessage","code","$$observable","Symbol","observable","randomString","Math","random","toString","substring","split","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","_typeof","proto","getPrototypeOf","miniKindOf","val","Array","isArray","Date","toDateString","getDate","setDate","isDate","message","constructor","stackTraceLimit","isError","constructorName","name","ctorName","slice","toLowerCase","replace","kindOf","typeOfVal","createStore","reducer","preloadedState","enhancer","_ref2","arguments","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","listener","isSubscribed","index","splice","dispatch","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","observeState","next","unsubscribe","this","warning","combineReducers","reducers","reducerKeys","finalReducers","unexpectedKeyCache","shapeAssertionError","finalReducerKeys","assertReducerShape","warningMessage","inputState","argumentName","unexpectedKeys","filter","getUnexpectedStateShapeWarningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","actionType","String","isCrushed","autoMergeLevel2","o","initialState","registry","bootstrapped","persistorReducer","firstIndex","migrations","currentVersion","inboundVersion","migrationKeys","map","ver","parseInt","sort","a","b","versionKey","reject","inbound","outbound","whitelistBlacklistCheck","fullState","store","options","cb","optionsToTest","k","boostrappedCb","_pStore","rehydrateAction","persistor","purge","results","purgeResult","all","flushResult","pause","persist","manualPersist"],"mappings":"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"}