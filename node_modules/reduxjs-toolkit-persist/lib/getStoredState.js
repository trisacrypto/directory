"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("./constants");
function getStoredState(config) {
    const transforms = config.transforms || [];
    const storageKey = `${config.keyPrefix !== undefined ? config.keyPrefix : constants_1.KEY_PREFIX}${config.key}`;
    const storage = config.storage;
    const debug = config.debug;
    let deserialize;
    if (config.deserialize === false) {
        deserialize = (x) => x;
    }
    else if (typeof config.deserialize === 'function') {
        deserialize = config.deserialize;
    }
    else {
        deserialize = defaultDeserialize;
    }
    return storage.getItem(storageKey).then((serialized) => {
        if (!serialized)
            return undefined;
        else {
            try {
                const state = {};
                const rawState = deserialize(serialized);
                Object.keys(rawState).forEach(key => {
                    state[key] = transforms.reduceRight((subState, transformer) => {
                        return transformer.out(subState, key, rawState);
                    }, deserialize(rawState[key]));
                });
                return state;
            }
            catch (err) {
                if (process.env.NODE_ENV !== 'production' && debug)
                    console.log(`reduxjs-toolkit-persist/getStoredState: Error restoring data ${serialized}`, err);
                throw err;
            }
        }
    });
}
exports.default = getStoredState;
function defaultDeserialize(serial) {
    return JSON.parse(serial);
}
