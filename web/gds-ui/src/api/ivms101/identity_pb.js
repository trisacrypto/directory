// source: ivms101/identity.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var ivms101_ivms101_pb = require('../ivms101/ivms101_pb.js');
goog.object.extend(proto, ivms101_ivms101_pb);
var ivms101_enum_pb = require('../ivms101/enum_pb.js');
goog.object.extend(proto, ivms101_enum_pb);
goog.exportSymbol('proto.ivms101.Beneficiary', null, global);
goog.exportSymbol('proto.ivms101.BeneficiaryVasp', null, global);
goog.exportSymbol('proto.ivms101.IdentityPayload', null, global);
goog.exportSymbol('proto.ivms101.IntermediaryVasp', null, global);
goog.exportSymbol('proto.ivms101.OriginatingVasp', null, global);
goog.exportSymbol('proto.ivms101.Originator', null, global);
goog.exportSymbol('proto.ivms101.PayloadMetadata', null, global);
goog.exportSymbol('proto.ivms101.TransferPath', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ivms101.IdentityPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ivms101.IdentityPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ivms101.IdentityPayload.displayName = 'proto.ivms101.IdentityPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ivms101.Originator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ivms101.Originator.repeatedFields_, null);
};
goog.inherits(proto.ivms101.Originator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ivms101.Originator.displayName = 'proto.ivms101.Originator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ivms101.Beneficiary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ivms101.Beneficiary.repeatedFields_, null);
};
goog.inherits(proto.ivms101.Beneficiary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ivms101.Beneficiary.displayName = 'proto.ivms101.Beneficiary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ivms101.OriginatingVasp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ivms101.OriginatingVasp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ivms101.OriginatingVasp.displayName = 'proto.ivms101.OriginatingVasp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ivms101.BeneficiaryVasp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ivms101.BeneficiaryVasp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ivms101.BeneficiaryVasp.displayName = 'proto.ivms101.BeneficiaryVasp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ivms101.IntermediaryVasp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ivms101.IntermediaryVasp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ivms101.IntermediaryVasp.displayName = 'proto.ivms101.IntermediaryVasp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ivms101.TransferPath = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ivms101.TransferPath.repeatedFields_, null);
};
goog.inherits(proto.ivms101.TransferPath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ivms101.TransferPath.displayName = 'proto.ivms101.TransferPath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ivms101.PayloadMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ivms101.PayloadMetadata.repeatedFields_, null);
};
goog.inherits(proto.ivms101.PayloadMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ivms101.PayloadMetadata.displayName = 'proto.ivms101.PayloadMetadata';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ivms101.IdentityPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.ivms101.IdentityPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ivms101.IdentityPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.IdentityPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    originator: (f = msg.getOriginator()) && proto.ivms101.Originator.toObject(includeInstance, f),
    beneficiary: (f = msg.getBeneficiary()) && proto.ivms101.Beneficiary.toObject(includeInstance, f),
    originatingVasp: (f = msg.getOriginatingVasp()) && proto.ivms101.OriginatingVasp.toObject(includeInstance, f),
    beneficiaryVasp: (f = msg.getBeneficiaryVasp()) && proto.ivms101.BeneficiaryVasp.toObject(includeInstance, f),
    transferPath: (f = msg.getTransferPath()) && proto.ivms101.TransferPath.toObject(includeInstance, f),
    payloadMetadata: (f = msg.getPayloadMetadata()) && proto.ivms101.PayloadMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ivms101.IdentityPayload}
 */
proto.ivms101.IdentityPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ivms101.IdentityPayload;
  return proto.ivms101.IdentityPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ivms101.IdentityPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ivms101.IdentityPayload}
 */
proto.ivms101.IdentityPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ivms101.Originator;
      reader.readMessage(value,proto.ivms101.Originator.deserializeBinaryFromReader);
      msg.setOriginator(value);
      break;
    case 2:
      var value = new proto.ivms101.Beneficiary;
      reader.readMessage(value,proto.ivms101.Beneficiary.deserializeBinaryFromReader);
      msg.setBeneficiary(value);
      break;
    case 3:
      var value = new proto.ivms101.OriginatingVasp;
      reader.readMessage(value,proto.ivms101.OriginatingVasp.deserializeBinaryFromReader);
      msg.setOriginatingVasp(value);
      break;
    case 4:
      var value = new proto.ivms101.BeneficiaryVasp;
      reader.readMessage(value,proto.ivms101.BeneficiaryVasp.deserializeBinaryFromReader);
      msg.setBeneficiaryVasp(value);
      break;
    case 5:
      var value = new proto.ivms101.TransferPath;
      reader.readMessage(value,proto.ivms101.TransferPath.deserializeBinaryFromReader);
      msg.setTransferPath(value);
      break;
    case 6:
      var value = new proto.ivms101.PayloadMetadata;
      reader.readMessage(value,proto.ivms101.PayloadMetadata.deserializeBinaryFromReader);
      msg.setPayloadMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ivms101.IdentityPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ivms101.IdentityPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ivms101.IdentityPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.IdentityPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOriginator();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ivms101.Originator.serializeBinaryToWriter
    );
  }
  f = message.getBeneficiary();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ivms101.Beneficiary.serializeBinaryToWriter
    );
  }
  f = message.getOriginatingVasp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ivms101.OriginatingVasp.serializeBinaryToWriter
    );
  }
  f = message.getBeneficiaryVasp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ivms101.BeneficiaryVasp.serializeBinaryToWriter
    );
  }
  f = message.getTransferPath();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ivms101.TransferPath.serializeBinaryToWriter
    );
  }
  f = message.getPayloadMetadata();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ivms101.PayloadMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional Originator originator = 1;
 * @return {?proto.ivms101.Originator}
 */
proto.ivms101.IdentityPayload.prototype.getOriginator = function() {
  return /** @type{?proto.ivms101.Originator} */ (
    jspb.Message.getWrapperField(this, proto.ivms101.Originator, 1));
};


/**
 * @param {?proto.ivms101.Originator|undefined} value
 * @return {!proto.ivms101.IdentityPayload} returns this
*/
proto.ivms101.IdentityPayload.prototype.setOriginator = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ivms101.IdentityPayload} returns this
 */
proto.ivms101.IdentityPayload.prototype.clearOriginator = function() {
  return this.setOriginator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ivms101.IdentityPayload.prototype.hasOriginator = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Beneficiary beneficiary = 2;
 * @return {?proto.ivms101.Beneficiary}
 */
proto.ivms101.IdentityPayload.prototype.getBeneficiary = function() {
  return /** @type{?proto.ivms101.Beneficiary} */ (
    jspb.Message.getWrapperField(this, proto.ivms101.Beneficiary, 2));
};


/**
 * @param {?proto.ivms101.Beneficiary|undefined} value
 * @return {!proto.ivms101.IdentityPayload} returns this
*/
proto.ivms101.IdentityPayload.prototype.setBeneficiary = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ivms101.IdentityPayload} returns this
 */
proto.ivms101.IdentityPayload.prototype.clearBeneficiary = function() {
  return this.setBeneficiary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ivms101.IdentityPayload.prototype.hasBeneficiary = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OriginatingVasp originating_vasp = 3;
 * @return {?proto.ivms101.OriginatingVasp}
 */
proto.ivms101.IdentityPayload.prototype.getOriginatingVasp = function() {
  return /** @type{?proto.ivms101.OriginatingVasp} */ (
    jspb.Message.getWrapperField(this, proto.ivms101.OriginatingVasp, 3));
};


/**
 * @param {?proto.ivms101.OriginatingVasp|undefined} value
 * @return {!proto.ivms101.IdentityPayload} returns this
*/
proto.ivms101.IdentityPayload.prototype.setOriginatingVasp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ivms101.IdentityPayload} returns this
 */
proto.ivms101.IdentityPayload.prototype.clearOriginatingVasp = function() {
  return this.setOriginatingVasp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ivms101.IdentityPayload.prototype.hasOriginatingVasp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BeneficiaryVasp beneficiary_vasp = 4;
 * @return {?proto.ivms101.BeneficiaryVasp}
 */
proto.ivms101.IdentityPayload.prototype.getBeneficiaryVasp = function() {
  return /** @type{?proto.ivms101.BeneficiaryVasp} */ (
    jspb.Message.getWrapperField(this, proto.ivms101.BeneficiaryVasp, 4));
};


/**
 * @param {?proto.ivms101.BeneficiaryVasp|undefined} value
 * @return {!proto.ivms101.IdentityPayload} returns this
*/
proto.ivms101.IdentityPayload.prototype.setBeneficiaryVasp = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ivms101.IdentityPayload} returns this
 */
proto.ivms101.IdentityPayload.prototype.clearBeneficiaryVasp = function() {
  return this.setBeneficiaryVasp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ivms101.IdentityPayload.prototype.hasBeneficiaryVasp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TransferPath transfer_path = 5;
 * @return {?proto.ivms101.TransferPath}
 */
proto.ivms101.IdentityPayload.prototype.getTransferPath = function() {
  return /** @type{?proto.ivms101.TransferPath} */ (
    jspb.Message.getWrapperField(this, proto.ivms101.TransferPath, 5));
};


/**
 * @param {?proto.ivms101.TransferPath|undefined} value
 * @return {!proto.ivms101.IdentityPayload} returns this
*/
proto.ivms101.IdentityPayload.prototype.setTransferPath = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ivms101.IdentityPayload} returns this
 */
proto.ivms101.IdentityPayload.prototype.clearTransferPath = function() {
  return this.setTransferPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ivms101.IdentityPayload.prototype.hasTransferPath = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PayloadMetadata payload_metadata = 6;
 * @return {?proto.ivms101.PayloadMetadata}
 */
proto.ivms101.IdentityPayload.prototype.getPayloadMetadata = function() {
  return /** @type{?proto.ivms101.PayloadMetadata} */ (
    jspb.Message.getWrapperField(this, proto.ivms101.PayloadMetadata, 6));
};


/**
 * @param {?proto.ivms101.PayloadMetadata|undefined} value
 * @return {!proto.ivms101.IdentityPayload} returns this
*/
proto.ivms101.IdentityPayload.prototype.setPayloadMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ivms101.IdentityPayload} returns this
 */
proto.ivms101.IdentityPayload.prototype.clearPayloadMetadata = function() {
  return this.setPayloadMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ivms101.IdentityPayload.prototype.hasPayloadMetadata = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ivms101.Originator.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ivms101.Originator.prototype.toObject = function(opt_includeInstance) {
  return proto.ivms101.Originator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ivms101.Originator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.Originator.toObject = function(includeInstance, msg) {
  var f, obj = {
    originatorPersonsList: jspb.Message.toObjectList(msg.getOriginatorPersonsList(),
    ivms101_ivms101_pb.Person.toObject, includeInstance),
    accountNumbersList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ivms101.Originator}
 */
proto.ivms101.Originator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ivms101.Originator;
  return proto.ivms101.Originator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ivms101.Originator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ivms101.Originator}
 */
proto.ivms101.Originator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ivms101_ivms101_pb.Person;
      reader.readMessage(value,ivms101_ivms101_pb.Person.deserializeBinaryFromReader);
      msg.addOriginatorPersons(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccountNumbers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ivms101.Originator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ivms101.Originator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ivms101.Originator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.Originator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOriginatorPersonsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ivms101_ivms101_pb.Person.serializeBinaryToWriter
    );
  }
  f = message.getAccountNumbersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated Person originator_persons = 1;
 * @return {!Array<!proto.ivms101.Person>}
 */
proto.ivms101.Originator.prototype.getOriginatorPersonsList = function() {
  return /** @type{!Array<!proto.ivms101.Person>} */ (
    jspb.Message.getRepeatedWrapperField(this, ivms101_ivms101_pb.Person, 1));
};


/**
 * @param {!Array<!proto.ivms101.Person>} value
 * @return {!proto.ivms101.Originator} returns this
*/
proto.ivms101.Originator.prototype.setOriginatorPersonsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ivms101.Person=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ivms101.Person}
 */
proto.ivms101.Originator.prototype.addOriginatorPersons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ivms101.Person, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ivms101.Originator} returns this
 */
proto.ivms101.Originator.prototype.clearOriginatorPersonsList = function() {
  return this.setOriginatorPersonsList([]);
};


/**
 * repeated string account_numbers = 2;
 * @return {!Array<string>}
 */
proto.ivms101.Originator.prototype.getAccountNumbersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ivms101.Originator} returns this
 */
proto.ivms101.Originator.prototype.setAccountNumbersList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ivms101.Originator} returns this
 */
proto.ivms101.Originator.prototype.addAccountNumbers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ivms101.Originator} returns this
 */
proto.ivms101.Originator.prototype.clearAccountNumbersList = function() {
  return this.setAccountNumbersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ivms101.Beneficiary.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ivms101.Beneficiary.prototype.toObject = function(opt_includeInstance) {
  return proto.ivms101.Beneficiary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ivms101.Beneficiary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.Beneficiary.toObject = function(includeInstance, msg) {
  var f, obj = {
    beneficiaryPersonsList: jspb.Message.toObjectList(msg.getBeneficiaryPersonsList(),
    ivms101_ivms101_pb.Person.toObject, includeInstance),
    accountNumbersList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ivms101.Beneficiary}
 */
proto.ivms101.Beneficiary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ivms101.Beneficiary;
  return proto.ivms101.Beneficiary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ivms101.Beneficiary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ivms101.Beneficiary}
 */
proto.ivms101.Beneficiary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ivms101_ivms101_pb.Person;
      reader.readMessage(value,ivms101_ivms101_pb.Person.deserializeBinaryFromReader);
      msg.addBeneficiaryPersons(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccountNumbers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ivms101.Beneficiary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ivms101.Beneficiary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ivms101.Beneficiary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.Beneficiary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeneficiaryPersonsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ivms101_ivms101_pb.Person.serializeBinaryToWriter
    );
  }
  f = message.getAccountNumbersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated Person beneficiary_persons = 1;
 * @return {!Array<!proto.ivms101.Person>}
 */
proto.ivms101.Beneficiary.prototype.getBeneficiaryPersonsList = function() {
  return /** @type{!Array<!proto.ivms101.Person>} */ (
    jspb.Message.getRepeatedWrapperField(this, ivms101_ivms101_pb.Person, 1));
};


/**
 * @param {!Array<!proto.ivms101.Person>} value
 * @return {!proto.ivms101.Beneficiary} returns this
*/
proto.ivms101.Beneficiary.prototype.setBeneficiaryPersonsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ivms101.Person=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ivms101.Person}
 */
proto.ivms101.Beneficiary.prototype.addBeneficiaryPersons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ivms101.Person, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ivms101.Beneficiary} returns this
 */
proto.ivms101.Beneficiary.prototype.clearBeneficiaryPersonsList = function() {
  return this.setBeneficiaryPersonsList([]);
};


/**
 * repeated string account_numbers = 2;
 * @return {!Array<string>}
 */
proto.ivms101.Beneficiary.prototype.getAccountNumbersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ivms101.Beneficiary} returns this
 */
proto.ivms101.Beneficiary.prototype.setAccountNumbersList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ivms101.Beneficiary} returns this
 */
proto.ivms101.Beneficiary.prototype.addAccountNumbers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ivms101.Beneficiary} returns this
 */
proto.ivms101.Beneficiary.prototype.clearAccountNumbersList = function() {
  return this.setAccountNumbersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ivms101.OriginatingVasp.prototype.toObject = function(opt_includeInstance) {
  return proto.ivms101.OriginatingVasp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ivms101.OriginatingVasp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.OriginatingVasp.toObject = function(includeInstance, msg) {
  var f, obj = {
    originatingVasp: (f = msg.getOriginatingVasp()) && ivms101_ivms101_pb.Person.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ivms101.OriginatingVasp}
 */
proto.ivms101.OriginatingVasp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ivms101.OriginatingVasp;
  return proto.ivms101.OriginatingVasp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ivms101.OriginatingVasp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ivms101.OriginatingVasp}
 */
proto.ivms101.OriginatingVasp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ivms101_ivms101_pb.Person;
      reader.readMessage(value,ivms101_ivms101_pb.Person.deserializeBinaryFromReader);
      msg.setOriginatingVasp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ivms101.OriginatingVasp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ivms101.OriginatingVasp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ivms101.OriginatingVasp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.OriginatingVasp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOriginatingVasp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ivms101_ivms101_pb.Person.serializeBinaryToWriter
    );
  }
};


/**
 * optional Person originating_vasp = 1;
 * @return {?proto.ivms101.Person}
 */
proto.ivms101.OriginatingVasp.prototype.getOriginatingVasp = function() {
  return /** @type{?proto.ivms101.Person} */ (
    jspb.Message.getWrapperField(this, ivms101_ivms101_pb.Person, 1));
};


/**
 * @param {?proto.ivms101.Person|undefined} value
 * @return {!proto.ivms101.OriginatingVasp} returns this
*/
proto.ivms101.OriginatingVasp.prototype.setOriginatingVasp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ivms101.OriginatingVasp} returns this
 */
proto.ivms101.OriginatingVasp.prototype.clearOriginatingVasp = function() {
  return this.setOriginatingVasp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ivms101.OriginatingVasp.prototype.hasOriginatingVasp = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ivms101.BeneficiaryVasp.prototype.toObject = function(opt_includeInstance) {
  return proto.ivms101.BeneficiaryVasp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ivms101.BeneficiaryVasp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.BeneficiaryVasp.toObject = function(includeInstance, msg) {
  var f, obj = {
    beneficiaryVasp: (f = msg.getBeneficiaryVasp()) && ivms101_ivms101_pb.Person.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ivms101.BeneficiaryVasp}
 */
proto.ivms101.BeneficiaryVasp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ivms101.BeneficiaryVasp;
  return proto.ivms101.BeneficiaryVasp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ivms101.BeneficiaryVasp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ivms101.BeneficiaryVasp}
 */
proto.ivms101.BeneficiaryVasp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ivms101_ivms101_pb.Person;
      reader.readMessage(value,ivms101_ivms101_pb.Person.deserializeBinaryFromReader);
      msg.setBeneficiaryVasp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ivms101.BeneficiaryVasp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ivms101.BeneficiaryVasp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ivms101.BeneficiaryVasp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.BeneficiaryVasp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeneficiaryVasp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ivms101_ivms101_pb.Person.serializeBinaryToWriter
    );
  }
};


/**
 * optional Person beneficiary_vasp = 1;
 * @return {?proto.ivms101.Person}
 */
proto.ivms101.BeneficiaryVasp.prototype.getBeneficiaryVasp = function() {
  return /** @type{?proto.ivms101.Person} */ (
    jspb.Message.getWrapperField(this, ivms101_ivms101_pb.Person, 1));
};


/**
 * @param {?proto.ivms101.Person|undefined} value
 * @return {!proto.ivms101.BeneficiaryVasp} returns this
*/
proto.ivms101.BeneficiaryVasp.prototype.setBeneficiaryVasp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ivms101.BeneficiaryVasp} returns this
 */
proto.ivms101.BeneficiaryVasp.prototype.clearBeneficiaryVasp = function() {
  return this.setBeneficiaryVasp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ivms101.BeneficiaryVasp.prototype.hasBeneficiaryVasp = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ivms101.IntermediaryVasp.prototype.toObject = function(opt_includeInstance) {
  return proto.ivms101.IntermediaryVasp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ivms101.IntermediaryVasp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.IntermediaryVasp.toObject = function(includeInstance, msg) {
  var f, obj = {
    intermediaryVasp: (f = msg.getIntermediaryVasp()) && ivms101_ivms101_pb.Person.toObject(includeInstance, f),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ivms101.IntermediaryVasp}
 */
proto.ivms101.IntermediaryVasp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ivms101.IntermediaryVasp;
  return proto.ivms101.IntermediaryVasp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ivms101.IntermediaryVasp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ivms101.IntermediaryVasp}
 */
proto.ivms101.IntermediaryVasp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ivms101_ivms101_pb.Person;
      reader.readMessage(value,ivms101_ivms101_pb.Person.deserializeBinaryFromReader);
      msg.setIntermediaryVasp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ivms101.IntermediaryVasp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ivms101.IntermediaryVasp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ivms101.IntermediaryVasp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.IntermediaryVasp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntermediaryVasp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ivms101_ivms101_pb.Person.serializeBinaryToWriter
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional Person intermediary_vasp = 1;
 * @return {?proto.ivms101.Person}
 */
proto.ivms101.IntermediaryVasp.prototype.getIntermediaryVasp = function() {
  return /** @type{?proto.ivms101.Person} */ (
    jspb.Message.getWrapperField(this, ivms101_ivms101_pb.Person, 1));
};


/**
 * @param {?proto.ivms101.Person|undefined} value
 * @return {!proto.ivms101.IntermediaryVasp} returns this
*/
proto.ivms101.IntermediaryVasp.prototype.setIntermediaryVasp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ivms101.IntermediaryVasp} returns this
 */
proto.ivms101.IntermediaryVasp.prototype.clearIntermediaryVasp = function() {
  return this.setIntermediaryVasp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ivms101.IntermediaryVasp.prototype.hasIntermediaryVasp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.ivms101.IntermediaryVasp.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ivms101.IntermediaryVasp} returns this
 */
proto.ivms101.IntermediaryVasp.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ivms101.TransferPath.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ivms101.TransferPath.prototype.toObject = function(opt_includeInstance) {
  return proto.ivms101.TransferPath.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ivms101.TransferPath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.TransferPath.toObject = function(includeInstance, msg) {
  var f, obj = {
    transferPathList: jspb.Message.toObjectList(msg.getTransferPathList(),
    proto.ivms101.IntermediaryVasp.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ivms101.TransferPath}
 */
proto.ivms101.TransferPath.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ivms101.TransferPath;
  return proto.ivms101.TransferPath.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ivms101.TransferPath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ivms101.TransferPath}
 */
proto.ivms101.TransferPath.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ivms101.IntermediaryVasp;
      reader.readMessage(value,proto.ivms101.IntermediaryVasp.deserializeBinaryFromReader);
      msg.addTransferPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ivms101.TransferPath.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ivms101.TransferPath.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ivms101.TransferPath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.TransferPath.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransferPathList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ivms101.IntermediaryVasp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IntermediaryVasp transfer_path = 1;
 * @return {!Array<!proto.ivms101.IntermediaryVasp>}
 */
proto.ivms101.TransferPath.prototype.getTransferPathList = function() {
  return /** @type{!Array<!proto.ivms101.IntermediaryVasp>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ivms101.IntermediaryVasp, 1));
};


/**
 * @param {!Array<!proto.ivms101.IntermediaryVasp>} value
 * @return {!proto.ivms101.TransferPath} returns this
*/
proto.ivms101.TransferPath.prototype.setTransferPathList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ivms101.IntermediaryVasp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ivms101.IntermediaryVasp}
 */
proto.ivms101.TransferPath.prototype.addTransferPath = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ivms101.IntermediaryVasp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ivms101.TransferPath} returns this
 */
proto.ivms101.TransferPath.prototype.clearTransferPathList = function() {
  return this.setTransferPathList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ivms101.PayloadMetadata.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ivms101.PayloadMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.ivms101.PayloadMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ivms101.PayloadMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.PayloadMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    transliterationMethodList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ivms101.PayloadMetadata}
 */
proto.ivms101.PayloadMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ivms101.PayloadMetadata;
  return proto.ivms101.PayloadMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ivms101.PayloadMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ivms101.PayloadMetadata}
 */
proto.ivms101.PayloadMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.ivms101.TransliterationMethodCode>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTransliterationMethod(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ivms101.PayloadMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ivms101.PayloadMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ivms101.PayloadMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ivms101.PayloadMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransliterationMethodList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
};


/**
 * repeated TransliterationMethodCode transliteration_method = 1;
 * @return {!Array<!proto.ivms101.TransliterationMethodCode>}
 */
proto.ivms101.PayloadMetadata.prototype.getTransliterationMethodList = function() {
  return /** @type {!Array<!proto.ivms101.TransliterationMethodCode>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.ivms101.TransliterationMethodCode>} value
 * @return {!proto.ivms101.PayloadMetadata} returns this
 */
proto.ivms101.PayloadMetadata.prototype.setTransliterationMethodList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.ivms101.TransliterationMethodCode} value
 * @param {number=} opt_index
 * @return {!proto.ivms101.PayloadMetadata} returns this
 */
proto.ivms101.PayloadMetadata.prototype.addTransliterationMethod = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ivms101.PayloadMetadata} returns this
 */
proto.ivms101.PayloadMetadata.prototype.clearTransliterationMethodList = function() {
  return this.setTransliterationMethodList([]);
};


goog.object.extend(exports, proto.ivms101);
