// source: trisa/gds/models/v1beta1/ca.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.trisa.gds.models.v1beta1.Certificate', null, global);
goog.exportSymbol('proto.trisa.gds.models.v1beta1.CertificateRequest', null, global);
goog.exportSymbol('proto.trisa.gds.models.v1beta1.CertificateRequestState', null, global);
goog.exportSymbol('proto.trisa.gds.models.v1beta1.Name', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trisa.gds.models.v1beta1.CertificateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trisa.gds.models.v1beta1.CertificateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trisa.gds.models.v1beta1.CertificateRequest.displayName = 'proto.trisa.gds.models.v1beta1.CertificateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trisa.gds.models.v1beta1.Certificate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trisa.gds.models.v1beta1.Certificate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trisa.gds.models.v1beta1.Certificate.displayName = 'proto.trisa.gds.models.v1beta1.Certificate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trisa.gds.models.v1beta1.Name = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.trisa.gds.models.v1beta1.Name.repeatedFields_, null);
};
goog.inherits(proto.trisa.gds.models.v1beta1.Name, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trisa.gds.models.v1beta1.Name.displayName = 'proto.trisa.gds.models.v1beta1.Name';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.trisa.gds.models.v1beta1.CertificateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trisa.gds.models.v1beta1.CertificateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vasp: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commonName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    authorityId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    batchId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    batchName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    batchStatus: jspb.Message.getFieldWithDefault(msg, 8, ""),
    orderNumber: jspb.Message.getFieldWithDefault(msg, 9, 0),
    creationDate: jspb.Message.getFieldWithDefault(msg, 10, ""),
    profile: jspb.Message.getFieldWithDefault(msg, 11, ""),
    rejectReason: jspb.Message.getFieldWithDefault(msg, 12, ""),
    pkcs12password: msg.getPkcs12password_asB64(),
    pkcs12signature: msg.getPkcs12signature_asB64(),
    created: jspb.Message.getFieldWithDefault(msg, 15, ""),
    modified: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trisa.gds.models.v1beta1.CertificateRequest;
  return proto.trisa.gds.models.v1beta1.CertificateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trisa.gds.models.v1beta1.CertificateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVasp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommonName(value);
      break;
    case 4:
      var value = /** @type {!proto.trisa.gds.models.v1beta1.CertificateRequestState} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAuthorityId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBatchId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatchName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatchStatus(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrderNumber(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreationDate(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfile(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRejectReason(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPkcs12password(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPkcs12signature(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreated(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setModified(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trisa.gds.models.v1beta1.CertificateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trisa.gds.models.v1beta1.CertificateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVasp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommonName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAuthorityId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getBatchId();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getBatchName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBatchStatus();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOrderNumber();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getCreationDate();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getProfile();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getRejectReason();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPkcs12password_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = message.getPkcs12signature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = message.getCreated();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getModified();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string vasp = 2;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getVasp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setVasp = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string common_name = 3;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getCommonName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setCommonName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional CertificateRequestState status = 4;
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequestState}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getStatus = function() {
  return /** @type {!proto.trisa.gds.models.v1beta1.CertificateRequestState} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.trisa.gds.models.v1beta1.CertificateRequestState} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int64 authority_id = 5;
 * @return {number}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getAuthorityId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setAuthorityId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 batch_id = 6;
 * @return {number}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getBatchId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setBatchId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string batch_name = 7;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getBatchName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setBatchName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string batch_status = 8;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getBatchStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setBatchStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 order_number = 9;
 * @return {number}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getOrderNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setOrderNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string creation_date = 10;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getCreationDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setCreationDate = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string profile = 11;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getProfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setProfile = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string reject_reason = 12;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getRejectReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setRejectReason = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bytes pkcs12password = 13;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getPkcs12password = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes pkcs12password = 13;
 * This is a type-conversion wrapper around `getPkcs12password()`
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getPkcs12password_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPkcs12password()));
};


/**
 * optional bytes pkcs12password = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPkcs12password()`
 * @return {!Uint8Array}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getPkcs12password_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPkcs12password()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setPkcs12password = function(value) {
  return jspb.Message.setProto3BytesField(this, 13, value);
};


/**
 * optional bytes pkcs12signature = 14;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getPkcs12signature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes pkcs12signature = 14;
 * This is a type-conversion wrapper around `getPkcs12signature()`
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getPkcs12signature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPkcs12signature()));
};


/**
 * optional bytes pkcs12signature = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPkcs12signature()`
 * @return {!Uint8Array}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getPkcs12signature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPkcs12signature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setPkcs12signature = function(value) {
  return jspb.Message.setProto3BytesField(this, 14, value);
};


/**
 * optional string created = 15;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setCreated = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string modified = 16;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.getModified = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.CertificateRequest} returns this
 */
proto.trisa.gds.models.v1beta1.CertificateRequest.prototype.setModified = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.toObject = function(opt_includeInstance) {
  return proto.trisa.gds.models.v1beta1.Certificate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trisa.gds.models.v1beta1.Certificate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trisa.gds.models.v1beta1.Certificate.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, 0),
    serialNumber: msg.getSerialNumber_asB64(),
    signature: msg.getSignature_asB64(),
    signatureAlgorithm: jspb.Message.getFieldWithDefault(msg, 4, ""),
    publicKeyAlgorithm: jspb.Message.getFieldWithDefault(msg, 5, ""),
    subject: (f = msg.getSubject()) && proto.trisa.gds.models.v1beta1.Name.toObject(includeInstance, f),
    issuer: (f = msg.getIssuer()) && proto.trisa.gds.models.v1beta1.Name.toObject(includeInstance, f),
    notBefore: jspb.Message.getFieldWithDefault(msg, 8, ""),
    notAfter: jspb.Message.getFieldWithDefault(msg, 9, ""),
    revoked: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    data: msg.getData_asB64(),
    chain: msg.getChain_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trisa.gds.models.v1beta1.Certificate}
 */
proto.trisa.gds.models.v1beta1.Certificate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trisa.gds.models.v1beta1.Certificate;
  return proto.trisa.gds.models.v1beta1.Certificate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trisa.gds.models.v1beta1.Certificate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trisa.gds.models.v1beta1.Certificate}
 */
proto.trisa.gds.models.v1beta1.Certificate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSerialNumber(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatureAlgorithm(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicKeyAlgorithm(value);
      break;
    case 6:
      var value = new proto.trisa.gds.models.v1beta1.Name;
      reader.readMessage(value,proto.trisa.gds.models.v1beta1.Name.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 7:
      var value = new proto.trisa.gds.models.v1beta1.Name;
      reader.readMessage(value,proto.trisa.gds.models.v1beta1.Name.deserializeBinaryFromReader);
      msg.setIssuer(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotBefore(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotAfter(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRevoked(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChain(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trisa.gds.models.v1beta1.Certificate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trisa.gds.models.v1beta1.Certificate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trisa.gds.models.v1beta1.Certificate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSerialNumber_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSignatureAlgorithm();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPublicKeyAlgorithm();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.trisa.gds.models.v1beta1.Name.serializeBinaryToWriter
    );
  }
  f = message.getIssuer();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.trisa.gds.models.v1beta1.Name.serializeBinaryToWriter
    );
  }
  f = message.getNotBefore();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getNotAfter();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getRevoked();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getChain_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
};


/**
 * optional int64 version = 1;
 * @return {number}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes serial_number = 2;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getSerialNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes serial_number = 2;
 * This is a type-conversion wrapper around `getSerialNumber()`
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getSerialNumber_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSerialNumber()));
};


/**
 * optional bytes serial_number = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSerialNumber()`
 * @return {!Uint8Array}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getSerialNumber_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSerialNumber()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.setSerialNumber = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes signature = 3;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes signature = 3;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string signature_algorithm = 4;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getSignatureAlgorithm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.setSignatureAlgorithm = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string public_key_algorithm = 5;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getPublicKeyAlgorithm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.setPublicKeyAlgorithm = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Name subject = 6;
 * @return {?proto.trisa.gds.models.v1beta1.Name}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getSubject = function() {
  return /** @type{?proto.trisa.gds.models.v1beta1.Name} */ (
    jspb.Message.getWrapperField(this, proto.trisa.gds.models.v1beta1.Name, 6));
};


/**
 * @param {?proto.trisa.gds.models.v1beta1.Name|undefined} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
*/
proto.trisa.gds.models.v1beta1.Certificate.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Name issuer = 7;
 * @return {?proto.trisa.gds.models.v1beta1.Name}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getIssuer = function() {
  return /** @type{?proto.trisa.gds.models.v1beta1.Name} */ (
    jspb.Message.getWrapperField(this, proto.trisa.gds.models.v1beta1.Name, 7));
};


/**
 * @param {?proto.trisa.gds.models.v1beta1.Name|undefined} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
*/
proto.trisa.gds.models.v1beta1.Certificate.prototype.setIssuer = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.clearIssuer = function() {
  return this.setIssuer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.hasIssuer = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string not_before = 8;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getNotBefore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.setNotBefore = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string not_after = 9;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getNotAfter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.setNotAfter = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool revoked = 10;
 * @return {boolean}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getRevoked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.setRevoked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bytes data = 11;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes data = 11;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * optional bytes chain = 12;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getChain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes chain = 12;
 * This is a type-conversion wrapper around `getChain()`
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getChain_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChain()));
};


/**
 * optional bytes chain = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChain()`
 * @return {!Uint8Array}
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.getChain_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChain()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.trisa.gds.models.v1beta1.Certificate} returns this
 */
proto.trisa.gds.models.v1beta1.Certificate.prototype.setChain = function(value) {
  return jspb.Message.setProto3BytesField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trisa.gds.models.v1beta1.Name.repeatedFields_ = [3,4,5,6,7,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trisa.gds.models.v1beta1.Name.prototype.toObject = function(opt_includeInstance) {
  return proto.trisa.gds.models.v1beta1.Name.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trisa.gds.models.v1beta1.Name} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trisa.gds.models.v1beta1.Name.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serialNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    organizationList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    organizationalUnitList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    streetAddressList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    localityList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    provinceList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    postalCodeList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    countryList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trisa.gds.models.v1beta1.Name}
 */
proto.trisa.gds.models.v1beta1.Name.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trisa.gds.models.v1beta1.Name;
  return proto.trisa.gds.models.v1beta1.Name.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trisa.gds.models.v1beta1.Name} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trisa.gds.models.v1beta1.Name}
 */
proto.trisa.gds.models.v1beta1.Name.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommonName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerialNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addOrganization(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addOrganizationalUnit(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addStreetAddress(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addLocality(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addProvince(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addPostalCode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trisa.gds.models.v1beta1.Name.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trisa.gds.models.v1beta1.Name.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trisa.gds.models.v1beta1.Name} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trisa.gds.models.v1beta1.Name.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSerialNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrganizationList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getOrganizationalUnitList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getStreetAddressList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getLocalityList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getProvinceList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getPostalCodeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getCountryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
};


/**
 * optional string common_name = 1;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Name.prototype.getCommonName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.setCommonName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string serial_number = 2;
 * @return {string}
 */
proto.trisa.gds.models.v1beta1.Name.prototype.getSerialNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.setSerialNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string organization = 3;
 * @return {!Array<string>}
 */
proto.trisa.gds.models.v1beta1.Name.prototype.getOrganizationList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.setOrganizationList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.addOrganization = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.clearOrganizationList = function() {
  return this.setOrganizationList([]);
};


/**
 * repeated string organizational_unit = 4;
 * @return {!Array<string>}
 */
proto.trisa.gds.models.v1beta1.Name.prototype.getOrganizationalUnitList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.setOrganizationalUnitList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.addOrganizationalUnit = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.clearOrganizationalUnitList = function() {
  return this.setOrganizationalUnitList([]);
};


/**
 * repeated string street_address = 5;
 * @return {!Array<string>}
 */
proto.trisa.gds.models.v1beta1.Name.prototype.getStreetAddressList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.setStreetAddressList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.addStreetAddress = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.clearStreetAddressList = function() {
  return this.setStreetAddressList([]);
};


/**
 * repeated string locality = 6;
 * @return {!Array<string>}
 */
proto.trisa.gds.models.v1beta1.Name.prototype.getLocalityList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.setLocalityList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.addLocality = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.clearLocalityList = function() {
  return this.setLocalityList([]);
};


/**
 * repeated string province = 7;
 * @return {!Array<string>}
 */
proto.trisa.gds.models.v1beta1.Name.prototype.getProvinceList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.setProvinceList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.addProvince = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.clearProvinceList = function() {
  return this.setProvinceList([]);
};


/**
 * repeated string postal_code = 8;
 * @return {!Array<string>}
 */
proto.trisa.gds.models.v1beta1.Name.prototype.getPostalCodeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.setPostalCodeList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.addPostalCode = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.clearPostalCodeList = function() {
  return this.setPostalCodeList([]);
};


/**
 * repeated string country = 9;
 * @return {!Array<string>}
 */
proto.trisa.gds.models.v1beta1.Name.prototype.getCountryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.setCountryList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.addCountry = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.trisa.gds.models.v1beta1.Name} returns this
 */
proto.trisa.gds.models.v1beta1.Name.prototype.clearCountryList = function() {
  return this.setCountryList([]);
};


/**
 * @enum {number}
 */
proto.trisa.gds.models.v1beta1.CertificateRequestState = {
  INITIALIZED: 0,
  READY_TO_SUBMIT: 1,
  PROCESSING: 2,
  DOWNLOADING: 3,
  DOWNLOADED: 4,
  COMPLETED: 5,
  CR_REJECTED: 6,
  CR_ERRORED: 7
};

goog.object.extend(exports, proto.trisa.gds.models.v1beta1);
