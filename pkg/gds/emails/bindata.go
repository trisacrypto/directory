// Code generated by go-bindata. DO NOT EDIT.
// sources:
// deliver_certs.html (1.983kB)
// deliver_certs.txt (1.585kB)
// expires_admin_notification.html (1.199kB)
// expires_admin_notification.txt (850B)
// reissuance_admin_notification.html (931B)
// reissuance_admin_notification.txt (601B)
// reissuance_reminder.html (2.196kB)
// reissuance_reminder.txt (1.739kB)
// reissuance_started.html (1.409kB)
// reissuance_started.txt (1.015kB)
// reject_registration.html (845B)
// reject_registration.txt (600B)
// review_request.html (1.225kB)
// review_request.txt (978B)
// verify_contact.html (675B)
// verify_contact.txt (545B)

package emails

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _deliver_certsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x55\x4f\x6f\xdb\xc6\x13\xbd\xf3\x53\xbc\x9f\x7f\x87\xb6\x80\x2d\x22\x39\x1a\x2c\xd1\x34\xe9\x1f\x23\x45\x1a\x58\x42\x8b\x1e\xc7\xbb\x23\x71\xeb\xe5\xce\x76\x76\x29\x45\x09\xfc\xdd\x8b\x25\x29\x59\x12\x9c\xde\x48\xee\xce\x9b\x37\x33\xef\x0d\x9b\xd8\xfe\xca\xde\x0b\xbe\x7c\xc1\xe2\x03\xf5\x8c\xa7\xa7\xeb\xa6\x8e\x6d\x55\x35\xb1\xad\x80\xbf\x64\x50\xac\xee\xef\x96\x6f\x10\x38\xef\x44\x1f\xa1\xbc\x71\x29\x2b\x65\x27\x01\x1d\x25\x3c\x30\x07\x50\x8c\x2a\x5b\xb6\xf8\x56\x14\xca\x87\xd7\xef\xfe\x37\x41\x88\x6e\x28\xb8\xcf\x63\x50\x85\xe7\xb0\x8d\x52\xc8\x6c\xe1\x2c\x87\xec\xf2\x1e\x86\x35\xbb\xb5\x33\x94\x39\x61\x4b\xde\x59\xca\x2e\x6c\xb0\x2f\x28\x3d\xf7\x0f\xac\xa9\x73\x11\x59\x20\xb9\xe3\x99\x5c\x85\xc3\x19\xb6\x8e\x90\x3b\x9e\x49\xff\xe2\xe5\x81\x3c\xde\x39\x65\x93\x45\xf7\x0b\xbc\xc9\x99\x4c\xc7\xb6\x20\xe4\xce\x25\x70\x4f\xce\x83\x94\xf1\xf1\xfd\xdb\xe5\xab\xd7\x15\xc0\xc1\xe8\x3e\x16\x5e\x67\x74\x52\x89\xa0\x5c\xb8\xc0\x50\x80\xeb\xa3\xe7\x9e\x43\x3e\x49\x18\x55\xb2\x18\xf1\x18\x52\xa1\xdd\xaf\x7e\x5b\x56\xc0\xce\xe5\x6e\xe6\x7b\x68\xe3\x81\x6f\x16\xf0\x27\xd3\x51\xd8\x30\x56\x4a\x5b\xf6\xb8\x1f\x3c\xc3\x48\x1f\xbd\xa3\x60\x18\x2e\xac\x45\xfb\xb1\x77\x8b\xea\x38\x9d\x55\xc7\x88\xea\x7a\xd2\x3d\x2c\x67\x72\x3e\x41\xd6\x53\xa3\xec\xa1\x5e\x70\xc8\xba\x1f\xab\xa3\x84\xb5\x78\x2f\xbb\x74\x3b\x63\x0c\xbe\x8c\xb8\xf1\xae\x6d\x52\x56\x09\x9b\xf6\xee\xdd\x6d\x53\xcf\xcf\xa3\x26\xfe\xb8\x7b\x87\xa7\xa7\xa6\xf6\xee\xf2\xea\xfd\x28\x03\x56\xb6\xcf\xdd\xbd\x08\x7e\xbe\x72\xbc\xf1\x15\xb0\xdf\x4f\xe4\x71\x01\x72\x7a\xf4\x95\xe8\xb7\xd2\xf7\x12\x50\xf4\x7b\x11\x3c\x9d\xcc\xc2\x7e\x29\x74\xc9\xea\xc8\xe3\xc3\x50\x86\x71\x11\x3c\x9d\x4d\x47\x5f\x09\xff\x29\xd8\x28\x2e\xe4\x8b\xc8\xc3\xe7\x63\x54\x53\x97\x5e\xcf\x9e\x5a\x09\x2c\x8f\x02\x9b\x86\x75\xaa\xb1\x6b\x34\xdc\xb7\x45\x60\x3b\xe7\x3d\x02\xb3\x05\xcd\xc2\x44\xa4\x94\x76\xa2\xb6\xa9\xb9\x6f\x17\xb8\x5b\x4f\x02\x76\xa9\xc2\xa8\xc0\xb5\xd3\x94\x4f\xe1\x0a\xfe\x37\x5b\x86\xb2\x61\x57\xcc\x49\xeb\xcc\x7a\xe6\xe0\xeb\xf1\xce\x21\x55\x41\x39\xba\xe0\x90\x6e\x12\xfd\x8e\x12\xac\x4b\xd1\xd3\x9e\x2d\xec\xa0\x45\xde\xe5\xfe\xd9\x3e\x88\x2a\x86\x53\x9a\xc9\x71\xe2\x49\x7a\x21\x0c\xe4\xfd\xbe\x02\x94\x6f\x5c\x4a\xc3\x85\xb5\x5e\x60\xf1\xf6\xfd\x69\xc9\xcf\x1c\x46\xbb\x4e\xf6\x2d\x6d\x2a\x76\xa7\x0a\x90\xc0\x37\xd9\xf5\x8c\x3f\x3b\x97\x22\x2b\xbc\x0b\x8f\x88\xa5\x72\x3b\x31\x3d\x58\xfd\xc4\x42\xe7\xc3\x28\x69\x87\xf0\xd9\xc5\x78\x69\x7c\x09\xe3\xa1\x91\xbe\xa7\x60\x0b\x34\x5f\x1f\xb7\xc0\x90\x18\x8d\x11\xcb\xad\x44\x0e\x29\xf9\xa6\x1e\xdf\x2a\x14\xcb\x59\x4e\x46\xdd\x43\x59\x71\x01\x0d\xa1\x53\x5e\x7f\x7f\xd5\xe5\x1c\xd3\x6d\x5d\x67\x75\x89\x16\x96\xb7\xf5\xdf\xe2\x82\x0b\x9b\x9b\xf1\x4b\x1d\x1f\x4d\x7a\xf5\xba\x76\xc1\xf2\xa7\x45\x97\x7b\xff\x7f\x32\xa5\xaf\xe5\x06\x05\x7b\x93\x68\x3b\x5e\xee\xf8\xe6\x94\xe8\x55\x3b\x9a\x5f\xcc\x50\xb6\xd2\x38\x91\xa6\xa6\x76\x31\xd6\x3a\x17\xfc\xb3\x28\x7a\xd1\xb3\xad\x52\x0a\x74\x21\xf3\x46\xa7\x65\x3b\xae\xab\xe7\x9d\x36\xaf\xac\x6b\x44\xcf\x94\x18\x89\x19\x32\x68\x85\xf3\x54\xa0\xfc\x5f\x15\x5e\xb5\xc7\xe7\x91\x54\x91\x48\xe9\x61\x47\xdb\xa2\x90\x22\x8e\x7f\x06\x4e\x05\x69\xd2\x03\x7a\xda\xc3\x48\xc8\x64\x32\x86\x04\xca\xc5\x7d\x87\x04\x65\x94\x59\x6e\xd3\x10\xa3\x68\xfe\x41\x65\x22\x41\x7e\xe1\xe4\xaa\x7d\xf1\x73\x49\x0b\x51\x94\x5e\x17\xc0\xf1\x57\x54\x3a\xf6\x32\xeb\x9b\x52\x74\x8a\x64\x78\x91\x3c\x99\xc7\x85\x91\xfe\xaa\x5d\x96\x47\x94\x85\x1d\xd8\x4f\x85\x7c\x9c\xda\x62\xa5\x02\x82\x64\x28\x47\xbf\x9f\x77\xb0\xdf\x9f\xff\x68\xce\xd5\xf7\x23\xa7\x8c\x7b\xde\x90\xda\x74\xdd\x3c\x28\xea\x51\x93\x2f\xfe\xba\xb0\x64\xdd\x3a\xc3\x58\x31\xf5\x13\xca\xbf\x01\x00\x00\xff\xff\x44\x02\x3d\xcd\xbf\x07\x00\x00")

func deliver_certsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_deliver_certsHtml,
		"deliver_certs.html",
	)
}

func deliver_certsHtml() (*asset, error) {
	bytes, err := deliver_certsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deliver_certs.html", size: 1983, mode: os.FileMode(0644), modTime: time.Unix(1721689071, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0xfc, 0x54, 0x6f, 0xcb, 0x9b, 0xeb, 0x65, 0xcb, 0xa, 0xd4, 0x6b, 0x64, 0xfb, 0xde, 0x72, 0xba, 0xc1, 0xe5, 0xec, 0xfb, 0xa4, 0x1, 0xcb, 0x87, 0x9c, 0x97, 0x25, 0xef, 0x60, 0xb8, 0x3f}}
	return a, nil
}

var _deliver_certsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x54\x4d\x6f\xdc\x46\x0c\xbd\xeb\x57\xb0\xe8\x21\x2d\xe0\x95\x91\x1c\x7d\x6a\x6a\xf7\xc3\x48\x91\x06\xde\x45\x8b\xde\x42\xcf\x70\x57\xac\x47\xc3\x29\x49\x69\xa3\x04\xfe\xef\xc5\x48\xbb\xf1\xae\xe3\xa3\xc8\x27\xf2\x0d\xdf\x23\x7f\xa7\x94\x04\xbe\x7c\x81\xf6\x3d\xf6\x04\x8f\x8f\x17\x4d\xf3\x8f\x0c\x0a\x9b\xbb\xdb\xf5\x5b\xc8\xe4\x7b\xd1\x07\x50\xda\xb1\xb9\xa2\xb3\x64\xe8\xd0\xe0\x9e\x28\x03\x96\xa2\x32\x52\x84\x1f\x44\x41\xe9\xf8\xf9\xe3\x77\x30\x97\x10\xdd\x61\xe6\xcf\xcf\x7e\xda\x29\x66\xa7\x08\x1c\x29\x3b\xfb\x04\x81\xd4\x79\xcb\x01\x9d\x0c\x46\x4c\x1c\xd1\x39\xef\x60\xaa\x35\x7a\xea\xef\x49\xad\xe3\x02\x2e\x20\xde\xd1\x91\xda\x21\x03\x23\x23\x78\x47\x87\xe8\x6f\x49\xee\x31\xc1\x0d\x2b\x05\x17\x9d\x5a\x78\xeb\x8e\xa1\xa3\x58\xff\xf7\x8e\x0d\xa8\x47\x4e\x80\x4a\xf0\xe1\xdd\xf5\xfa\xf5\x1b\xa0\x1c\x74\x2a\x95\xd3\x19\x15\xab\x78\xf4\xca\x03\x02\x66\xe0\xbe\x24\xea\x29\xfb\x49\xbb\xa2\xe2\x12\x24\xc1\x60\x95\x72\xbf\xf9\x63\x0d\x7b\xf6\xee\xc0\xf4\x38\xbe\x23\x57\x17\xa0\x4f\xa1\xc3\xbc\x23\xd8\x28\x8e\x94\xe0\x6e\x48\x04\x41\xfa\x92\x18\x73\x20\xe0\xbc\x15\xed\xe7\x99\xb5\x4d\xb3\xe9\x08\x8a\x72\x8f\x3a\x41\x24\x47\x4e\x06\xb2\x5d\x46\x13\x8f\x6f\x04\xca\xae\xd3\xfc\x22\x34\xd8\x4a\x4a\xb2\xb7\xab\xa6\xb9\xbd\xb9\x9a\x95\xfd\xeb\xf6\x06\x1e\x1f\x9b\xbb\x59\x43\x52\x8a\x4f\xe3\x59\x00\x4f\x99\xaf\x89\xfa\xc3\x9f\x27\xfa\x2d\xc0\xd3\x48\x45\x5c\x4b\xdf\x4b\x86\x6a\x9d\x05\xb0\x04\x0e\x56\x6a\xd6\xa4\x8c\x09\xde\x0f\xf5\xf5\x0b\x60\x09\x2d\x91\x0a\xf9\x25\xc7\x22\x9c\x7d\xc9\x1e\xbf\x6a\xa6\xd9\x08\x44\x9a\x95\x59\xde\x7b\x2a\xce\xc5\xac\xca\x9e\x53\x82\x4c\x14\x01\x8f\x5a\x16\x34\xdb\x8b\xc6\x16\x6e\xb7\x8b\xdc\x6c\xb3\x5e\x5b\x56\xf3\xd3\x1a\xb5\xc2\xab\x91\x40\x29\x30\x55\x13\xe3\xd6\x49\xcf\x9c\x3e\x77\x79\x75\xec\x51\xab\x3c\xeb\xb2\x18\x64\x8f\x06\x91\xad\x24\x9c\x28\x42\x1c\xb4\x5a\xa1\xa2\xcf\xb6\xa6\xa8\x04\x32\x3b\x10\x23\xa3\x45\xb0\x9c\x07\x4c\x69\x02\xa5\x15\x9b\x0d\xcf\x4c\xf8\x02\x83\xeb\x77\x2f\x33\x98\x6d\xbd\xd8\xbc\xce\xa6\xae\x05\x82\x64\x5a\x39\xf7\x04\x7f\x77\x6c\x85\x14\x12\xe7\x07\x28\x4a\x81\xe2\xc2\xf2\xb8\x10\xed\xd9\xc0\x6b\xa7\x21\x7f\xe6\x52\x9e\x6f\x85\xe4\x39\x19\xa4\xef\x31\xc7\x5a\x8f\x2e\xbe\xae\xc8\x60\x04\x1f\xa5\x50\x36\x4b\x1f\xab\x19\x23\x59\x50\xbe\xaf\xeb\x9e\x61\x36\xad\x84\xa1\xee\xd0\xe1\x28\x90\xd2\x55\xd3\x74\xee\xc5\xae\x2e\x2f\x5d\xd9\xb0\x8d\x34\x5e\xfe\x2b\x9c\x39\xef\x56\x73\xe4\xb2\x3c\x04\x7b\xfd\xe6\x92\x73\xa4\x4f\x6d\xe7\x7d\xfa\x1e\x43\x9d\x65\x45\x60\x8e\x2b\xc3\x71\x06\x77\xb4\x3a\xe5\xda\x34\xbf\x8a\x42\x2f\x7a\xb6\x55\xf5\x05\x9c\x9d\x76\xba\x9c\x99\x79\x5d\x9f\x36\xfa\xb0\xb2\x17\x50\x12\xa1\x11\x8c\x6c\xec\x2f\x50\x47\x87\x6f\x69\xcf\xe2\xd6\x61\x74\x38\x56\x6d\x27\xf8\x6f\x20\xab\xf8\x83\x63\x7b\x9c\x20\x48\x76\x0c\x0e\x83\xd5\x22\x36\x94\x22\xea\x3f\xa9\x2c\x85\x31\xb5\x2c\x20\x0a\x75\x04\x15\x23\xcb\xe0\xd6\x09\xc3\x03\xd4\xdb\x91\x29\xc1\xdc\x72\x55\x89\x5a\xc1\x40\xad\xd5\x6c\x1b\xa4\x6f\xe1\xc3\xc2\x3b\x0a\x64\x71\x50\x2a\x69\x3a\x9c\x8a\x34\x9d\xdf\xc0\xb6\x69\x7e\x26\x73\xb8\xa3\x1d\x6a\xb4\x8b\xe6\xe5\x13\x0a\x6b\xd2\x91\x03\xc1\x86\xb0\x6f\xfe\x0f\x00\x00\xff\xff\x6a\xe7\xb1\x52\x31\x06\x00\x00")

func deliver_certsTxtBytes() ([]byte, error) {
	return bindataRead(
		_deliver_certsTxt,
		"deliver_certs.txt",
	)
}

func deliver_certsTxt() (*asset, error) {
	bytes, err := deliver_certsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deliver_certs.txt", size: 1585, mode: os.FileMode(0644), modTime: time.Unix(1721689071, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6e, 0x37, 0x14, 0xb8, 0xfc, 0xfa, 0xff, 0xbd, 0xc9, 0xc4, 0x79, 0xe2, 0x1a, 0x76, 0xe0, 0xf6, 0x3a, 0x56, 0xcc, 0x55, 0xa8, 0x27, 0x5a, 0xa7, 0xb0, 0x1a, 0xea, 0x1e, 0xd, 0xdc, 0x68, 0x51}}
	return a, nil
}

var _expires_admin_notificationHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x4f\x8f\xda\x3e\x10\xbd\xe7\x53\x3c\xed\x79\x45\xee\x28\xbf\x48\xfc\x60\xd5\x22\x55\xdb\x55\x60\x57\xea\xd1\xc4\x03\x8c\xe4\xd8\x68\xec\xb0\xa5\x28\xdf\xbd\x8a\x43\x20\x9b\xc2\x0d\x3c\x7e\x7f\x3c\xf3\x26\xd9\x21\xff\x4e\xc6\x38\xac\x8b\xe5\x6a\x86\x99\xae\xd8\xfa\xe7\x2c\x3d\xe4\x49\x92\x1d\xf2\x04\x98\x5d\x4a\x4b\x4d\x36\x70\x38\x61\x4e\x12\x78\xcb\xa5\x0a\x04\x55\x07\x57\xa9\x40\x1a\x42\xec\x7d\xad\x6c\x49\xd8\x3a\xc1\xf9\x8c\xc9\xdc\x55\x95\xb3\xaf\xaa\x22\x34\x0d\x3e\xd9\x98\x04\xf0\xce\x59\x6c\x68\xc7\x16\xca\x23\xec\x09\xdc\x13\x97\x37\x62\x1f\x49\xc2\x9e\x3d\x84\x4a\x27\x3a\xc2\x41\xbf\x0f\x2c\x04\x67\x71\x3e\x27\xc0\xe4\xa5\xfd\xaf\x02\x3b\xbb\x68\xdd\x34\xcd\x24\x19\x5a\x5f\xef\x09\xdf\x8c\xdb\x28\x83\x05\x0b\x95\xc1\xc9\x09\x2b\x92\x23\x97\xd4\x11\x5e\xfc\x73\xa9\x8c\x39\x5d\xde\x40\xd1\xd5\x17\x33\x57\xc1\xa2\xbb\xd1\xab\xe1\xcd\x90\xf2\x04\xa1\x23\xd3\x67\xc4\xe9\xab\x10\xd9\x20\x27\x28\xab\xf1\x31\x5b\xbd\xf5\xef\xe8\xde\x45\x09\x50\xd6\x22\x64\xc3\x50\x09\xc1\x81\xac\xaf\xa5\xf3\xd0\x35\xbe\xa2\x6a\x43\x02\xbf\x77\xb5\x69\xfb\x5c\x29\xb6\x38\x92\xf0\x96\x49\x0f\x1e\x3c\xbf\xc3\xd7\xaa\x8f\x1d\x69\x0a\x8a\x8d\x9f\x5e\x80\xb5\x69\x5b\x95\x19\xce\x33\x1f\xc4\xd9\x5d\xbe\x5c\x4c\xb3\xf4\xf2\x3b\x0e\xf2\x63\xb9\x40\xd3\x64\xa9\xe1\xf1\xd5\x82\x76\xec\x03\x09\xe9\x5b\x87\x47\xe0\xdb\x95\xdb\x0c\xee\x93\xfd\x94\x9d\xb2\xfc\x27\xce\x73\x44\x32\x2c\x3d\x40\x77\x69\x43\x1b\xb7\x11\xf8\x4b\x0e\xef\x41\x5f\xac\x3e\x38\xb6\x61\x84\xeb\x8f\x1f\xa0\x56\x24\xac\x0c\x5e\xeb\x76\x3c\x23\x68\x57\xeb\x4a\x8f\x44\xaf\xd9\x1d\xcb\x8e\x43\x7d\xbf\xf1\xfd\xba\xfd\xd3\xee\x61\x42\x3b\x68\x96\xb6\x43\x6e\x33\xf2\xcb\xd5\x28\x95\xc5\x35\xae\xdb\xda\x98\x3e\x9a\xce\x0e\x52\x17\xbf\x04\x78\x5f\x4e\xaf\xf9\xca\x14\xf6\x42\xdb\xff\x9e\x5a\x99\x58\x2e\x62\xec\xdf\x8b\x1f\x68\x9a\xa7\xfc\xee\x71\x96\xaa\x7c\xb8\x92\xff\x93\x0f\x28\x68\xa7\x44\xfb\xe7\x6c\x23\x48\xe3\xa2\x46\xc9\x87\xab\xba\x26\x55\x75\x39\xff\x1b\x00\x00\xff\xff\x79\xce\xa6\x55\xaf\x04\x00\x00")

func expires_admin_notificationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_expires_admin_notificationHtml,
		"expires_admin_notification.html",
	)
}

func expires_admin_notificationHtml() (*asset, error) {
	bytes, err := expires_admin_notificationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "expires_admin_notification.html", size: 1199, mode: os.FileMode(0644), modTime: time.Unix(1669674063, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd, 0xd1, 0xc1, 0xab, 0x2, 0xf0, 0xc8, 0x1b, 0x80, 0xb7, 0x98, 0xa8, 0x89, 0x40, 0xee, 0x79, 0x9a, 0x7d, 0xb9, 0x0, 0x79, 0xff, 0x45, 0xba, 0x6e, 0x4b, 0xa5, 0x5a, 0x8e, 0xea, 0xc8, 0x8d}}
	return a, nil
}

var _expires_admin_notificationTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\xd1\x6e\xdb\x30\x0c\x7c\xd7\x57\xf0\x03\x8a\x7c\x80\xdf\xb2\xa4\xd8\x0c\x0c\x5d\xe1\xa4\x05\xf6\xa8\x58\x97\x84\x80\x4c\x15\x94\x9c\x2e\x2b\xfc\xef\x83\x25\x3b\xc9\xb6\xf4\x51\xa4\x78\x77\xbc\xe3\x37\x78\x1f\x68\xdb\xd4\x9b\x25\x2d\x5d\xc7\x12\x1f\x8c\x59\x4e\x85\xda\x41\x12\xa7\x33\xad\xa0\x89\xf7\xdc\xda\x04\xb2\x7d\x0a\x9d\x4d\x70\xa4\xe0\x18\x7b\x2b\x2d\x68\x1f\x94\x3e\x3e\x68\xb1\x0a\x5d\x17\xe4\xc9\x76\xa0\x61\xa0\x77\xf6\x9e\x62\x08\x42\x3b\x1c\x58\xc8\x46\x4a\x47\x10\xcf\xb0\xed\x15\x36\x66\x88\x74\xe4\x48\x8a\x36\xa8\x2b\xc3\xf8\xf5\xc6\x0a\x0a\x92\xd1\x1f\xc7\x97\x4d\x1c\x64\x3d\x2a\x19\x86\x85\x31\xdb\x23\xe8\xab\x0f\x3b\xeb\x69\xcd\x8a\x36\x05\x3d\xd3\x06\x7a\xe2\x16\x05\x63\x12\xcc\xad\xf5\xfe\x3c\x89\x46\x16\xf2\x17\xff\xc4\xd1\x94\xfe\x4c\x40\xcf\x1e\x36\x82\x14\x27\xc6\x7b\x9e\x72\x17\x1a\x48\xd2\x33\x59\x71\xf4\xba\xdc\x3c\xcf\xc2\xcb\x22\xa0\xb6\x57\x85\xa4\x5b\x16\x4a\x81\x20\xb1\xd7\xc2\x5f\x5c\xee\xd0\xed\xa0\x14\x8f\xa1\xf7\xa3\xa9\x9d\x65\xa1\x13\x94\xf7\x0c\xb7\x30\x66\x75\x07\x67\xe4\xfc\x57\x87\x43\xb2\xec\x63\x65\x4c\xbd\xae\xf2\x2e\xaf\xf5\x9a\x86\xc1\x34\x38\x70\x4c\x50\xb8\xab\x45\xd5\xb4\xec\xdc\xb9\x7a\x37\x0c\xe6\x87\x1e\xac\xf0\xef\xec\x74\xf9\x78\x5b\x19\x7f\x94\x9c\x69\x0c\xba\xfa\x3f\x78\xf3\x28\xee\x2d\xb0\xa4\xd2\x9b\x5f\x63\x67\x03\x65\xeb\xe9\xa9\x1f\x77\x2e\xed\x52\x2a\x95\x3c\x7c\x49\xb9\xba\x9f\xba\x69\x2e\x87\x57\xdd\xc9\xcc\x98\x9f\xa1\xa7\xd6\x0a\x5d\x22\xdb\xf7\xde\xcf\xf1\x04\xb9\xf1\x3e\x9f\x3c\xbd\xd4\x95\x31\x23\x50\x7e\x36\x39\xea\x97\xe6\x7b\xc6\xfa\x82\x98\xa8\xc1\xc1\xaa\x8b\x0f\xa6\x4c\x7d\x7a\x6f\x5b\xd8\xee\x4f\x00\x00\x00\xff\xff\x86\x8d\xba\x85\x52\x03\x00\x00")

func expires_admin_notificationTxtBytes() ([]byte, error) {
	return bindataRead(
		_expires_admin_notificationTxt,
		"expires_admin_notification.txt",
	)
}

func expires_admin_notificationTxt() (*asset, error) {
	bytes, err := expires_admin_notificationTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "expires_admin_notification.txt", size: 850, mode: os.FileMode(0644), modTime: time.Unix(1669674063, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc9, 0xf2, 0xe7, 0xf5, 0x85, 0x8b, 0x6d, 0x96, 0xc, 0xdf, 0xcc, 0x64, 0x94, 0xba, 0xb1, 0x5e, 0x9b, 0xf8, 0x22, 0x13, 0x6e, 0x1a, 0x34, 0x69, 0x21, 0x3, 0x9c, 0x55, 0x98, 0xde, 0x32, 0x84}}
	return a, nil
}

var _reissuance_admin_notificationHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x8f\x9c\x43\x74\x37\x5b\x81\x6b\x97\x56\x50\x52\x90\x93\x42\x8f\x2b\x69\x6c\x0f\xac\x76\xc5\xec\x2a\xad\x1b\xf4\xdd\xcb\x4a\xfe\xa3\x2a\xf2\xcd\xcc\x9b\xdf\xcc\xec\xf3\x93\x6a\xb3\x6f\x64\x8c\xc3\x4b\x91\xef\xd6\x58\xd7\x0d\x5b\xff\xa8\xd2\x36\x4b\x12\xd5\x66\x09\xb0\x3e\x4b\x79\x4d\x36\x70\x38\x61\x43\x12\x78\xcf\x95\x0e\x04\xdd\x05\xd7\xe8\x40\x35\x84\xd8\xfb\x4e\xdb\x8a\xb0\x77\x82\xf7\x77\x3c\x6d\x5c\xd3\x38\xfb\xac\x1b\x42\xdf\xe3\xa8\x7d\x02\x94\x44\x16\x95\x6b\x5a\x43\x91\x72\x76\xe8\x2c\x06\x98\xb6\x71\x64\xdf\xa3\x3c\x21\x1c\x09\x5f\x8d\x2b\xb5\xc1\x96\x85\xaa\xe0\xe4\x84\x1d\xc9\x1b\x57\xf4\x94\x5c\xef\xdb\x74\x22\x64\x03\xaa\xe9\x4d\xb6\x46\x7d\x65\xc8\x06\x39\xa1\xa6\xa0\xd9\xf8\xd5\x19\xec\x4c\x7c\x99\x32\x9c\x29\x1f\xc4\xd9\x43\x96\x6f\x57\x2a\x3d\xff\x1e\x4e\xfa\x99\x6f\xd1\xf7\x2a\x35\x3c\x6f\x2d\xe8\xc0\x3e\x90\x50\x7d\x3b\x6d\x06\xdf\x5a\x6e\xc7\x2f\x0f\xfb\x21\x07\x6d\xf9\xaf\x0e\xec\xec\x6c\xc8\x54\xba\x43\x8f\x0e\x23\x5a\x3c\x83\xff\xf3\x7e\x09\xfd\x62\xeb\xd6\xb1\x0d\x33\xee\x52\xbe\x43\xed\x48\x58\x1b\x3c\x77\x4d\x49\x32\x43\x47\x6d\x94\xee\x2d\xfd\xd3\xb2\x2c\xbd\xf5\x26\x9c\x33\xb0\x6c\xfc\x25\x62\x1f\xec\x9e\xc6\x67\x44\x55\x1a\xff\xe4\x98\x91\x5f\xae\x43\xa5\x2d\xde\x98\x7e\x0f\xb9\xda\x77\xc6\x40\xa8\x72\x32\x04\x30\x96\x26\xe9\xc7\x6b\xbe\xba\xe6\x4b\x69\x1c\x85\xf6\x9f\x1e\xe2\x9a\x41\x2e\x28\xce\x79\x2d\xbe\xa3\xef\x1f\xb2\xc5\xb2\x4a\x75\x36\xfd\x82\x3e\x93\x0f\x28\xe8\xa0\xa5\xf6\x8f\xaa\x14\xa4\xb1\x3a\xae\xbc\x97\x71\xbc\x90\x6e\xc6\x9c\xff\x0b\x00\x00\xff\xff\x07\x44\xe1\xa5\xa3\x03\x00\x00")

func reissuance_admin_notificationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_reissuance_admin_notificationHtml,
		"reissuance_admin_notification.html",
	)
}

func reissuance_admin_notificationHtml() (*asset, error) {
	bytes, err := reissuance_admin_notificationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reissuance_admin_notification.html", size: 931, mode: os.FileMode(0644), modTime: time.Unix(1669674063, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd, 0x60, 0xc1, 0x59, 0xe5, 0xa4, 0xed, 0xa4, 0x62, 0x73, 0x18, 0x83, 0x38, 0xbe, 0xe1, 0x85, 0xc3, 0x6c, 0x8f, 0xdd, 0x2a, 0x1a, 0x4d, 0x10, 0x60, 0x14, 0xdb, 0x40, 0x6d, 0xc5, 0x2c, 0x66}}
	return a, nil
}

var _reissuance_admin_notificationTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x51\x4b\xae\xdb\x30\x0c\xdc\xeb\x14\x3c\xc0\xc3\x3b\x80\x77\x69\x5c\xb4\x06\x8a\x14\x70\x92\x02\x5d\xca\xd2\x24\x11\xa0\x4f\x40\xd1\x69\xdd\x40\x77\x2f\x2c\xe7\x07\xb4\x6f\x49\x72\x66\x48\xce\x7c\x85\xf7\x89\x76\x7d\xb7\x5d\xd1\xca\x06\x17\xf3\x9b\x52\xbb\x13\x6e\xad\xce\x22\x8a\x93\x89\xd6\x60\x71\x07\x67\xb4\x80\xf4\x28\x29\x68\x81\x25\x86\xcb\x79\xd4\xd1\x80\x0e\x89\xe9\x7a\xa5\xf7\x75\x0a\x21\xc5\x8d\x0e\xa0\x52\xe8\xa4\x33\x0d\x40\x24\x93\xc2\xd9\x63\xe6\xa4\x58\x71\x7d\xa5\xa2\x9d\x05\x4b\xa1\x61\x22\x39\x81\xbe\xf8\x34\x68\x4f\xad\x63\x18\x49\x3c\xd1\x16\x7c\x71\x06\xef\x4a\xad\x47\x66\x44\x21\xf3\x7a\x49\xb4\x64\x1f\x58\x44\xe1\x89\x2c\x44\x3b\x9f\x1b\xa5\xba\xb6\xa9\xab\x7e\x74\x2d\x95\xa2\x7a\x1c\x5d\x16\x30\xec\x53\xbf\xb9\xdd\x72\x9f\x3c\x17\x97\xa2\xbe\xf3\x51\x47\xf7\x47\x8b\x4b\x71\x01\xbe\x76\x66\xc4\xf2\x2c\xcd\xdf\x36\xff\x7e\xaf\x3e\x47\x7b\x4e\x2e\xca\x32\xbb\x57\xf3\x64\x0b\x76\xda\xd3\x66\x0c\x03\x78\x19\x2f\xad\xa5\x53\xc9\xbf\xcf\x8e\x5f\x76\x3f\xeb\x9b\x67\xaa\x7f\xb8\xdf\xfc\xc7\x52\xa5\x7e\xa6\x91\x8c\x8e\x74\x71\xf8\x55\xdd\x3d\x8c\xde\x13\xc3\x24\xae\x31\xc8\x23\xe6\x9a\x3c\xed\xbb\x46\xa9\x59\xa8\x96\x3d\x66\xde\xbe\xff\x56\xb5\x3e\x21\x0b\xf5\x38\x6a\xb6\xf9\x4d\x2d\xac\x8f\xc2\xa2\x1d\x74\xf8\x1b\x00\x00\xff\xff\x6b\xca\x72\x48\x59\x02\x00\x00")

func reissuance_admin_notificationTxtBytes() ([]byte, error) {
	return bindataRead(
		_reissuance_admin_notificationTxt,
		"reissuance_admin_notification.txt",
	)
}

func reissuance_admin_notificationTxt() (*asset, error) {
	bytes, err := reissuance_admin_notificationTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reissuance_admin_notification.txt", size: 601, mode: os.FileMode(0644), modTime: time.Unix(1669674063, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x31, 0x91, 0x21, 0xcb, 0xf6, 0x36, 0xa2, 0x30, 0xa3, 0x47, 0xf4, 0x7a, 0x20, 0x1a, 0xd6, 0xd9, 0x10, 0x19, 0x54, 0x35, 0x6a, 0x30, 0xa0, 0x4b, 0x95, 0x6a, 0xac, 0x3, 0xc5, 0x6d, 0x85, 0xce}}
	return a, nil
}

var _reissuance_reminderHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x56\x4d\x6f\x1b\x37\x10\xbd\xef\xaf\x78\xc8\xa1\x27\x45\x46\x7b\x74\xd5\x45\x53\x3b\x68\x8c\x02\x49\x60\x1b\x35\x7a\xa4\x76\x47\x5a\x22\x5c\xce\x66\x38\x94\xba\x0d\xf2\xdf\x0b\x92\x2b\x59\x5a\xcb\xb9\xd9\x4b\xce\x7b\xf3\xf1\xe6\x51\xab\xa1\xfe\x40\xce\x31\xbe\x7d\xc3\xf2\xa3\xe9\x09\xdf\xbf\x2f\x56\x57\x43\x5d\x55\xab\xa1\xae\x80\x27\xc2\xde\x86\x0e\xca\x10\xea\xad\x6f\x31\x72\x84\x76\x46\xd3\x1f\x82\xc7\xfb\xbb\x87\x77\xb8\x6b\xc9\xab\xd5\x11\x37\x24\x6a\x37\xb6\x31\x4a\x01\x1b\x96\x0a\x58\x51\x5f\x27\xf4\x1b\xee\x7b\xf6\x13\xc7\xea\x8a\xfa\x1a\x7b\xeb\x1c\x02\xb3\xc7\x9a\x40\xff\x0e\x56\xac\xdf\x2e\xf1\xd8\x4d\xff\x19\xb5\xec\xd1\x1a\x25\xb0\xcf\x7c\x15\xd0\x44\x11\xf2\x8a\xe6\x94\xca\x86\x23\xcf\xfb\x63\xe4\x6d\x0a\x9c\xb8\x96\xd5\x69\x55\x89\xe1\x4f\xc7\x6b\xe3\x70\x6b\x85\x1a\x65\x19\xf1\x40\xb2\xb3\x0d\x95\xac\x4c\x54\xee\x8d\xda\xc6\x38\x37\x42\xc8\x86\x10\xa9\x94\x7c\x46\xcc\x3e\x95\x18\x54\xd8\x6f\x33\xfd\x7d\xb9\x7a\xe4\x9e\x8e\x96\x4f\x1d\x79\x68\x47\xe7\xe1\x46\xe8\x00\xde\x2e\x12\x7c\x85\xc2\x2f\xd4\x90\xdd\x11\x74\xcf\x30\x6d\x6b\x53\x3d\xc6\x81\x7a\x63\x5d\xc0\x4f\x7d\x6b\x42\xf7\x2b\xd8\x4f\xe9\x36\xec\xd5\xd8\x63\x8f\x06\x13\xc2\x9e\xa5\x7d\x3b\x08\x2b\x35\x4a\xed\x8c\xd6\xb7\x39\x17\xd6\x8e\xe4\x25\x02\x3e\xff\x75\xf3\xf0\xf3\x2f\x27\x40\x4b\xfc\xc3\xb1\x5c\x8c\x81\x72\x6c\xb9\x73\xbc\x91\x14\xd2\x52\x23\xe3\xa0\xf9\xd8\xd3\xfe\x8c\xf3\x7c\x00\x2b\xea\x2b\x00\xa8\x3f\x3b\x32\x81\xe0\x59\xe9\xfa\x22\x6c\xe6\x5c\x13\x42\x9a\xf9\xce\x1a\x18\xa8\xed\xe9\x6d\x20\x1f\xac\xa6\x16\x05\x6a\xa2\x50\x86\x73\xd6\x7f\x59\x20\x30\x86\x02\x9b\xe2\xa2\x50\xca\xcd\x31\x7f\x01\x47\x4d\xaa\xc4\x9a\xb5\x9b\xfa\x6e\x7c\x93\xe9\x4b\x9e\x49\x6f\xa5\xc7\x19\x2f\xf5\x89\x87\x32\xb8\x1e\xb6\xef\xa9\xb5\x46\xc9\x8d\xcb\x24\xaa\x0a\xa8\xcf\xaa\xfa\x94\xb0\x72\x03\xe7\xd5\xa3\x33\xbb\x94\x0e\x79\x9c\x0c\x5b\x8e\xa2\x3f\xbf\x9c\x6a\xae\x90\x16\x2e\x4d\x64\x67\x9c\x6d\x11\xbd\x5a\x97\x3b\x34\x5b\x8d\x25\x3e\xf0\x9e\x76\x24\x8b\xb9\xbc\xd0\x92\x4e\xa5\x38\x1b\x92\x08\x52\xed\x99\x97\x65\x6b\xbc\xfd\xaf\xa0\xd8\x22\xcc\x1f\x2f\xc4\x9a\x10\x87\xc4\xd7\x56\x48\xfd\xbc\x38\x63\xbc\xf3\x23\x1a\x8e\x5e\x49\x06\x23\x3a\x16\xa7\xf8\x1a\x49\x2c\x85\x17\xeb\x53\xe1\x90\x22\xcc\x46\x49\x32\xe8\xc9\x58\xce\x37\xe1\x25\xe1\x21\x7a\x81\x7d\x67\x9b\xae\x02\x7a\x33\x96\x56\xa7\xdb\x03\x6b\xb2\x25\xe3\xc0\x1b\x34\x26\x86\xdc\x68\xf6\x1b\x67\x1b\x4d\x5d\xd6\x0e\xc6\x8f\x50\x31\x3e\x6c\x48\x42\xc9\x96\x9b\x26\x2f\xd1\x9a\x36\x2c\x79\x9e\x05\x72\x2a\x7f\x1a\x30\xb7\x59\x56\x87\x6d\x78\xd9\x8a\x27\x02\xf9\x86\xa3\x98\x6d\x2a\x34\xdb\x26\xc3\xfa\xa0\xc6\xb9\x8b\x31\x30\x21\x0d\x97\xf2\xb6\xc7\xe0\xc6\xf4\x61\xe0\x10\xec\xda\xd1\xf9\xfe\x4c\x6b\x23\xb4\xb3\xb4\x2f\xc5\x8a\xed\x8d\x8c\xc7\x86\xf2\xa6\x24\xda\x1e\xc7\x49\x5e\x65\x4c\x92\x9e\x4c\x79\x32\xd2\x62\xc5\x27\x79\x5c\x1f\x98\xa2\xcb\xab\xea\x6c\x7d\x30\xb8\xbb\xdb\xeb\xa3\xa3\xe5\x27\xe3\xef\xbb\xdb\xec\x72\xce\xce\xaf\xde\xd3\x36\x69\x4e\xa8\x7d\x56\xd4\x2c\xf8\xf9\xca\xb3\xe6\x2e\x83\x7d\x3a\x91\xeb\x0c\xe4\xf4\xe8\x95\xe8\xf2\xf2\x20\x3d\x3d\xb3\xe0\xd9\x9b\xf4\x32\xf4\x81\x24\xe9\xe7\x63\xec\xd7\x24\xb3\xe0\x72\x56\x8e\x5e\x09\x7f\xef\xdb\x81\xad\xd7\x59\xe4\xe1\xf3\x31\x6a\x75\x95\x7a\x3d\xcd\xf6\x6e\xf3\xac\xb9\x24\xcf\xaf\x91\x42\xaa\x2e\x80\x05\x4d\x67\xfc\x96\xc2\xe2\xe0\x70\xd9\xb6\x1b\x45\x0c\x30\x9a\xd8\x0d\x3a\xa1\xcd\x6f\x6f\x92\x89\x29\x5f\x87\x38\x0c\x2c\xfa\xbb\xb0\x9a\xf2\x86\x2c\x2d\xbf\xa9\x2f\x7e\x5e\x5d\x99\x7a\x79\x90\x56\xcb\x15\x92\x2f\x42\x68\x70\xe3\x24\x23\x37\x96\xd5\xb7\xa1\xb8\xe4\x24\xca\xd5\x50\x9f\x8a\xf3\x0f\x0a\x8a\x7b\xda\x1a\x69\xc3\x62\xb5\x16\x5c\xe5\x37\x37\xff\x52\x78\xd5\x64\x1e\xc9\xf4\x05\xed\xff\x00\x00\x00\xff\xff\x33\x5a\xbd\x23\x94\x08\x00\x00")

func reissuance_reminderHtmlBytes() ([]byte, error) {
	return bindataRead(
		_reissuance_reminderHtml,
		"reissuance_reminder.html",
	)
}

func reissuance_reminderHtml() (*asset, error) {
	bytes, err := reissuance_reminderHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reissuance_reminder.html", size: 2196, mode: os.FileMode(0644), modTime: time.Unix(1669674063, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0xea, 0x2e, 0x79, 0x96, 0x3d, 0x6b, 0xc0, 0x74, 0x82, 0x2f, 0x40, 0x4d, 0x73, 0xc, 0x24, 0x9, 0x46, 0xc7, 0x8b, 0x26, 0xc5, 0xa0, 0xea, 0x59, 0xa3, 0x2, 0x21, 0xb2, 0x47, 0x99, 0x1f}}
	return a, nil
}

var _reissuance_reminderTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x55\xc1\x6e\x23\x37\x0c\xbd\xcf\x57\xf0\x03\x9c\x01\xda\x63\x4e\xdd\x26\x8b\x6e\x50\x60\x77\x91\x04\x0d\x7a\xa4\x25\xda\x43\xac\x46\x9c\xa5\x28\xbb\xd3\x85\xff\xbd\x90\x34\x76\x1c\xc7\xdd\x5b\xac\x21\xdf\xa3\xde\x7b\x62\x3e\x51\x08\x02\x3f\x7e\x40\xff\x19\x47\x82\xc3\x61\xd5\x75\x2f\x04\x7b\x4e\x03\x98\x80\xd2\xc8\xd1\xc3\x2c\x19\x6c\x40\x2b\x7f\x28\x3c\x3f\x3e\x3c\x7d\x80\x07\x4f\xd1\xd8\x66\xb8\x23\x35\xde\xb0\x43\xa3\x04\x1b\xd1\x8a\x76\x27\xe3\x28\x71\xc1\x84\x3d\x87\x00\x49\x24\xc2\x9a\x80\xfe\x99\x58\x39\x6e\x7b\x78\x1e\x96\x5f\x68\x2c\x11\x3c\x1a\x81\xc4\x46\xe2\xb2\x2a\x45\x03\x77\x8e\xce\xa9\x82\x7f\x3c\xf5\xdc\x97\x96\xc3\xa1\xef\xba\x82\xf5\x47\x90\x35\x06\xb8\x67\x25\x67\xa2\x33\x3c\x91\xee\xd8\x51\xe3\xc7\x6c\x32\xa2\xb1\xc3\x10\x66\x50\xe2\x94\x32\x2d\x64\xe7\x24\x12\x2b\xc9\x63\x2b\x38\x32\xc0\xcb\x40\x11\x6c\xa0\xb7\xc5\xa8\x74\x84\xf2\xab\xaa\x53\xe5\x52\x72\xc4\x3b\x02\xdb\x0b\xa0\xf7\x5c\x66\xc5\x00\x34\x22\x87\x04\x37\x37\x20\x71\x99\xca\x49\x34\xe4\xe5\xd2\x13\xa6\xb4\x17\xf5\x37\x93\x8a\x91\x33\xf2\x17\x6c\xd1\xd7\x11\xc4\x06\xd2\x2b\xfd\x5f\xff\xbc\x7b\xfa\xe5\xd7\x13\x4c\x0f\x7f\x1f\x07\xca\x89\x6a\xe7\x45\x45\xf1\xd8\x93\xd3\x79\xb2\xfa\x39\xd2\xfe\x0d\x63\xdf\x75\x5f\x03\x61\x22\x88\x62\x74\x7b\x15\xa2\xe2\xaf\x09\x52\xb1\x6b\xc7\x08\x08\xc6\x23\xdd\x24\x8a\x89\xad\xa8\x90\xc8\x65\x25\x08\x1c\xbf\xad\x20\x09\x4c\x0d\xb2\xf4\x94\x73\x13\x08\x22\xdf\x40\xb2\xd5\xfc\xac\xc5\x86\x45\x54\x8c\xae\x52\xb7\x79\x4a\x48\x16\x09\x8b\x12\x32\x35\x47\x46\xe0\x71\x24\xcf\x68\x14\xe6\xbe\xeb\xbe\x94\xa6\xaa\xc7\xe5\x75\x60\xc0\x5d\xe1\xa5\x08\x67\x96\xe9\x29\x92\x6f\x8b\x17\x27\xc7\x22\xef\x0e\x03\x7b\xc8\xd1\x38\x54\x11\x2e\x62\xdb\xc3\x27\xd9\xd3\x8e\x74\x75\x19\x11\xf0\x64\x75\xe2\xc0\xa9\xf8\x59\x2e\x58\x39\x45\xb7\x18\xf9\xdf\x86\xc1\x2d\x5a\x3f\x0f\xf0\x9a\x20\x4f\x85\xad\xda\x76\xd5\x2e\xf8\x10\x67\x70\x92\xa3\x91\x4e\xa8\x36\xb7\x67\xfb\x3d\x93\x32\xa5\x77\x61\x3f\x0d\x87\x1b\x23\xad\x90\x67\xba\xbf\x4d\xf2\x7b\xba\x63\xf7\x0a\xf6\x03\xbb\x01\x46\x9c\x9b\xc0\xa5\x76\x12\x2b\xfb\x01\x03\xc8\x06\x1c\xe6\x54\xe5\x95\xb8\x09\xec\xac\x68\x6b\x03\x60\x9c\xc1\x14\x63\xda\x90\xa6\x36\xa9\x38\x97\x15\xd6\xb4\x11\xad\x1e\x36\xc0\xe3\xb5\x9b\xa9\xe2\x6b\x66\x8e\x91\x7e\x2f\xc2\x0b\x01\x45\x27\x59\x71\xdb\x40\x4c\x80\x63\x32\x0c\xe1\x6a\x07\x60\x2a\x86\x52\x7d\xa7\x39\x85\xb9\x1c\x4c\x92\x12\xaf\x03\xbd\x3e\x01\xa5\x1d\xd3\xbe\xdd\x4e\x79\x44\x9d\x4f\xfa\xc9\xa6\xcd\xe6\x4f\xce\x51\x34\x9d\x6b\x4c\xaf\x6c\xb2\xdb\xae\x7b\xb8\xbf\xad\x6b\xe6\xaf\x87\x7b\x38\x1c\xba\x47\xda\x96\x7c\x28\xf9\x57\xf7\x6f\x97\x3d\x74\xfc\xf2\x1a\x8b\xc3\xa1\xfb\x72\x16\x9f\x56\x78\x7e\x52\x2a\xda\x0a\x86\xb2\x83\x6f\xdf\xef\xe4\xee\x89\xb4\xb8\xf3\x39\x8f\x6b\xd2\x56\xd0\x8e\xda\x49\x29\xf9\x18\xfd\x24\x1c\xad\x7d\x3d\xfe\x2a\x5f\x5e\x25\xd9\x90\x56\x1f\xbf\x67\x4a\x85\x39\x15\xb1\x53\x9e\x26\x51\xfb\x4d\xc5\xb0\xad\xbe\x9e\xa5\x87\xa5\xc9\x4b\x79\xd2\xa0\x34\x85\x79\x51\x2c\xcc\x2d\xd2\x9c\xda\x03\xef\xbb\xee\x77\x4a\x06\x8f\xb4\x45\xf5\x69\xd5\xb5\xff\x39\xff\xfb\x3e\x9e\x09\xc7\xff\x02\x00\x00\xff\xff\xaf\x22\xf8\x57\xcb\x06\x00\x00")

func reissuance_reminderTxtBytes() ([]byte, error) {
	return bindataRead(
		_reissuance_reminderTxt,
		"reissuance_reminder.txt",
	)
}

func reissuance_reminderTxt() (*asset, error) {
	bytes, err := reissuance_reminderTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reissuance_reminder.txt", size: 1739, mode: os.FileMode(0644), modTime: time.Unix(1669674063, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x28, 0xc0, 0x14, 0x3d, 0xce, 0xe8, 0xfc, 0xcd, 0x61, 0xa1, 0x24, 0xaa, 0x3d, 0xb6, 0x8c, 0x37, 0x1f, 0x5c, 0xe5, 0xef, 0xbf, 0x0, 0x86, 0xc0, 0x9b, 0x65, 0x5c, 0x2a, 0x71, 0x9b, 0x8a, 0x9d}}
	return a, nil
}

var _reissuance_startedHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\xc1\x6e\xe3\x36\x14\xbc\xeb\x2b\xa6\x39\x1b\x36\xda\x1e\x0a\x04\xaa\xd0\x6d\xb2\x68\x8d\x16\xbb\x0b\xc7\xed\xa2\xc7\x67\xe9\xd9\x22\x42\x91\xea\xe3\x93\x55\x35\xf0\xbf\x17\xa4\x24\xc7\x76\x93\x9b\x4d\x72\xe6\x0d\x67\x86\xca\xdb\xe2\x57\xb6\xd6\xe3\xe5\x05\xcb\x4f\xd4\x30\x4e\xa7\x45\xbe\x6a\x8b\x2c\xcb\xdb\x22\x03\xbe\x32\x48\x18\xbd\x18\x35\xee\x00\xf5\xb0\xac\x18\x7c\x87\x67\xe7\x7b\x68\x4d\xe9\x9f\x60\xbb\x59\x3f\x7d\xc0\xba\x62\xa7\x46\x07\x3c\xb0\xa8\xd9\x9b\x92\x94\x03\xf6\x5e\xa0\x35\x67\x40\x65\x84\x4b\xf5\x32\x40\xf8\x60\x82\x0a\xa9\xf1\x0e\x15\x87\x52\xcc\x8e\x2b\xec\xd8\xfa\x1e\x35\x1d\x19\x3b\x66\x07\x61\x13\x42\xc7\xd5\x02\x14\xc6\x41\xde\x56\x19\x50\x5e\xf2\xf7\x2c\x0c\xc7\x24\x49\x62\xcd\x46\xc0\xff\xb4\x66\x26\x27\xe5\x25\xfe\xf2\x1d\x7a\x63\x2d\x82\xf7\x0e\x3b\x86\x70\xc9\xe6\x18\x11\x94\x01\x81\x5b\x12\x52\x06\x37\x64\x2c\x4a\xef\x94\x8c\x8b\xbb\x69\xa8\xe3\x1e\x5f\x7e\x7b\x78\xfa\xf6\x3b\xb0\x2b\x65\x68\x95\xab\x2b\x0d\xcb\xec\xec\xda\xb6\x66\xb4\x62\x1a\x92\x01\x15\x2b\x19\x1b\xe0\xf7\x23\xcf\xeb\xfd\xd9\xa9\x0c\xc9\x5b\x8a\x06\x59\xeb\xfb\x70\x3f\x71\x74\x36\x5a\x9f\x5b\x53\xe4\x41\xc5\xbb\x43\xb1\x7e\xbc\xcf\x57\xd3\xef\x94\xd5\x9f\xeb\x47\x9c\x4e\xf9\xca\x9a\xdb\xa3\x9b\x64\x2c\x0b\x57\x78\x9c\xa7\xdd\x80\x5f\x8f\x9c\x4f\xbc\x43\xf6\x59\x0e\xe4\xcc\xbf\xc9\xc8\x1b\x92\xcb\xad\x77\xd0\x0f\xbe\x69\xbc\x43\xec\xd5\x0d\x78\xdc\x99\x0a\xf7\x16\xf4\xa3\xab\x5a\x6f\x9c\xde\xe0\xe6\xe5\x33\x2a\x5f\x45\xb3\xa6\xb2\x6e\x6b\x13\xae\x03\x0c\x20\x04\x2e\x3b\x61\x58\xe3\x9e\x63\x7f\xb5\xe6\x39\xca\x96\x42\xe8\xbd\x54\xe8\x6b\x53\xd6\xa9\xd5\x4d\x17\x14\x5d\x60\xa8\x8f\x75\xe5\x94\x75\xc2\xc4\x0a\xbc\x93\x78\xd4\x3e\xa9\xfc\xf4\x79\xfb\xf1\x42\xf3\x17\xcb\x14\x78\x24\x8c\xe2\x92\x88\xde\x68\x8d\x92\x84\xbf\xc1\x5a\xc7\x52\x52\xa7\xbe\x21\x35\x25\x59\x3b\x64\x18\xeb\xcb\xa0\xbd\xb2\xe0\x07\x54\x34\x04\x78\xc1\xf7\xa0\xb2\xe4\x10\x40\xaa\xdc\xb4\x1a\x16\xa3\x74\x3e\xb2\xa0\xf4\x4d\x7c\x6b\x46\x82\x2e\xa3\x22\x6e\x32\x00\x28\x3e\x24\x92\x78\x85\x34\xbd\xa6\x30\xd1\x57\x8b\xb8\x1a\x5f\x77\x94\xb0\x63\x38\x8f\x9e\x86\x68\xd2\x7c\xf1\xb9\xfc\x89\xe9\xea\xf6\xf9\x2a\xf1\x17\x6f\xba\x90\x13\x6a\xe1\xfd\x8f\x77\x31\xb3\xaf\xb5\x09\x2d\xcb\x1f\x9b\xdf\x71\x3a\xdd\x15\xff\x5b\xca\x57\x54\x9c\x1d\xbb\xa2\x9b\xdc\x13\xde\xb3\x80\xdc\x80\xbf\x3b\x0e\xb1\x6f\x61\x8c\xe7\x3c\x26\x46\xae\xfe\x3e\x74\x6d\xeb\x45\x7f\x12\xaf\xa9\x96\x64\x97\xc6\xdf\x15\x6f\x2e\xc7\xa9\xcb\x79\x42\x15\xd9\x9c\x57\x08\xb7\x76\x98\x5e\xa9\x1d\xc6\xba\xcc\x9d\x9a\x02\xcf\xdb\xe2\x52\xe3\xcf\x1c\x14\x1b\x3e\x90\x54\x61\x91\xef\x04\xab\xd4\xc4\xf4\x35\xfc\xc5\xfa\x1d\xd9\xd7\x67\x88\x27\x96\xa3\x29\x19\x5b\xa6\x66\x64\xfb\x2f\x00\x00\xff\xff\x78\xa1\xa2\x27\x81\x05\x00\x00")

func reissuance_startedHtmlBytes() ([]byte, error) {
	return bindataRead(
		_reissuance_startedHtml,
		"reissuance_started.html",
	)
}

func reissuance_startedHtml() (*asset, error) {
	bytes, err := reissuance_startedHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reissuance_started.html", size: 1409, mode: os.FileMode(0644), modTime: time.Unix(1669674063, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdd, 0xb9, 0x38, 0xb9, 0x9, 0x3b, 0x77, 0x9b, 0xb5, 0xc, 0x2f, 0x69, 0x8e, 0x8b, 0xa4, 0x96, 0xe8, 0x36, 0x3b, 0x54, 0xaa, 0xff, 0x31, 0x11, 0x47, 0xef, 0x28, 0x24, 0x20, 0xab, 0x49, 0xf4}}
	return a, nil
}

var _reissuance_startedTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x93\xcd\x6e\xdb\x48\x10\x84\xef\x7c\x8a\xda\xbb\x20\x60\x77\x0f\x0b\xf8\xb4\x5e\xdb\xd8\x08\x09\x6c\x43\x56\x62\xe4\xd8\x22\x4b\xe2\xc0\xc3\x19\xa6\xa7\x29\x86\x31\xf4\xee\xc1\x0c\x25\xff\x1d\x39\xdd\xd5\x3f\x5f\x35\x3f\xd1\xfb\x88\xe7\x67\x2c\x6f\xa5\x23\x8e\xc7\x45\x55\x3d\x12\xa2\xc4\xa8\xce\x5c\xd8\xc3\x22\x3c\x0d\x53\x1c\xf0\x14\xe2\x08\x6b\xa5\x7c\x29\x36\xeb\xd5\xc3\x25\x56\x0d\x83\x39\x9b\x70\x45\x35\xb7\x73\xb5\x18\x13\x76\x51\x61\x2d\xd1\x38\x65\x6d\x51\x27\x28\xf7\x2e\x99\x8a\xb9\x18\xd0\x30\xd5\xea\xb6\x6c\xb0\xa5\x8f\x23\x5a\x39\x10\x5b\x32\x40\xe9\x52\x1a\xd8\x2c\x20\x69\x6e\x13\x7d\x83\xfa\x6d\xed\x91\x4a\x04\x8a\x96\xf1\x5a\x3a\x05\x7f\xf6\xee\x5c\x5a\x8c\x4b\x7c\x8f\x03\x46\xe7\x3d\x52\x8c\x01\x5b\x42\x59\xd3\x1d\xb2\x42\x90\xd8\x8b\x8a\x11\xec\xc4\x79\xd4\x31\x98\xb8\x90\x63\xa5\x61\xe0\x88\xfb\xcf\x57\x0f\x7f\xfe\x05\x86\x5a\xa7\xde\xf8\x7e\x82\x65\x55\x6d\x5a\xa2\x57\xd7\x89\x4e\x68\x68\xe2\x7c\x42\xdc\xcd\xfa\xd7\x9d\x19\x4c\xa7\x42\x53\x32\x12\xef\xe3\x98\x2e\xaa\x6a\x75\x7d\x51\x98\x7f\x5b\x5d\xe3\x78\xac\xd6\x85\x0c\x95\x0d\xae\xcf\xd2\x39\xe1\x35\xf2\x12\xc8\x82\x3b\xdd\x4b\x70\xbf\xca\xbe\x73\xe2\xdb\x97\x9c\x71\x15\xbb\x2e\x06\x64\x53\xe7\x84\xf9\xe1\x64\x72\x75\x13\x9a\x3e\xba\x60\x73\xec\xfc\x95\x23\xd5\xa6\x75\xe9\x3d\x97\x54\x88\xd5\x83\x12\xde\x85\xa7\x7c\x10\xd9\xd9\x13\xa1\x5e\x52\x1a\xa3\x36\x18\x5b\x57\xb7\xe5\x4c\xba\x21\x19\x86\xc4\x9c\xd9\xb0\x00\x2c\x8a\xcc\xf5\x03\xc6\xdb\xbb\xcd\xcd\x05\xee\x3d\x25\x71\x96\xe4\xf6\xa5\xcd\xe8\xac\x45\x2d\xca\x3f\xb0\xb2\xd9\x4b\x19\x2c\x76\x62\xae\x16\xef\xa7\xd9\x73\x42\x76\x46\xc5\x3f\x68\x64\x4a\x88\x8a\xbf\x21\x75\xcd\x94\x20\x66\xec\x7a\x4b\x8b\x79\x34\x1e\xa8\xa8\x63\x97\x8f\xd3\x69\xb2\x25\x2e\x8b\x32\x4f\x56\x1a\xb6\x92\x4e\x35\x9b\x45\x7e\xcd\xff\x40\xee\xba\x25\x42\xc4\x28\xd3\xdb\x7d\x5e\x0e\xe5\xc3\x42\x99\xe7\x63\xeb\x52\x4f\xfd\xba\xfe\x52\x88\x9e\xb6\x53\xee\xa8\x90\x30\xe1\xc7\xc0\x94\x8d\x4a\xb9\x60\x1a\xfa\x3e\xaa\xfd\xab\xd1\x8a\x7b\xe2\x97\x2e\x2e\xcf\x48\x9a\x88\x10\x0d\xca\xde\x4f\xa7\xbb\xf2\xd3\xec\xc0\xd9\xa6\x65\x55\xfd\xc7\x64\x58\x73\x2f\xda\xa4\x45\x35\xff\x96\xff\xfb\xb8\x15\xff\x7a\x50\x78\xa0\x1e\x5c\x4d\x6c\x28\xdd\xef\x00\x00\x00\xff\xff\x86\x4e\xea\x47\xf7\x03\x00\x00")

func reissuance_startedTxtBytes() ([]byte, error) {
	return bindataRead(
		_reissuance_startedTxt,
		"reissuance_started.txt",
	)
}

func reissuance_startedTxt() (*asset, error) {
	bytes, err := reissuance_startedTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reissuance_started.txt", size: 1015, mode: os.FileMode(0644), modTime: time.Unix(1669674063, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0x4c, 0x36, 0x56, 0x12, 0x15, 0xa5, 0xd6, 0x1e, 0xca, 0xe0, 0x12, 0xd8, 0x6f, 0xae, 0xa7, 0x62, 0xc, 0x4c, 0x3d, 0xe9, 0xa7, 0x5a, 0x83, 0xe5, 0xb8, 0x98, 0x60, 0x7b, 0x2d, 0xe1, 0xbd}}
	return a, nil
}

var _reject_registrationHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\x4f\x8f\x1a\x3f\x0c\xbd\xcf\xa7\x78\xda\xcb\xef\x82\x98\x3b\xca\x6f\xd4\x6e\x91\x5a\x2e\x6d\xc5\xd2\xde\x0d\x63\x98\x54\x49\x3c\x75\x32\x50\xba\xe2\xbb\x57\x09\xb3\x40\x11\xbd\x45\x8e\xfd\xfc\xfe\xd8\xf4\xcd\x27\x76\x4e\xf0\xfa\x8a\xe9\x67\xf2\x8c\xd3\x69\x62\xea\xbe\xa9\x2a\xd3\x37\x15\xf0\x2d\x6c\x45\xd3\x10\x28\xb1\x3b\x4e\x90\x3a\xc6\x6a\xb9\x78\x79\x8f\x25\xef\x2d\x1f\xf0\x2c\xa4\x2d\x3a\x8a\x50\xfe\xc1\x9b\xc4\x6d\xe9\xd9\x8a\x73\x72\xb0\x61\x37\x76\x7f\x74\xb2\x26\x57\x01\x73\xab\xbc\x49\xa2\x47\xbc\xb0\xee\xed\x86\xa1\xbc\xb3\x31\x29\x25\x2b\x01\xca\x3f\x07\x8e\x69\x5a\x8d\x1c\x06\x97\x49\x18\x67\x1b\x13\x93\x4a\xd8\x35\x8b\xf9\xcc\xd4\xe3\xbb\xb0\xfe\xbe\x98\xe3\x74\x32\xb5\xb3\xf7\xad\xcb\x82\xcc\xca\xed\x75\xed\xdd\xf0\xb5\xe5\x4a\xec\x31\xd8\x17\xdd\x51\xb0\xbf\x0b\xcd\x3b\x90\xdb\xaf\x7f\x4c\x7f\x10\xef\x25\x20\x3b\x7c\x37\x7c\xfe\x19\xad\x3f\x8f\x9a\x3a\xcb\xce\x01\xac\xba\xec\x0f\x45\x09\xc5\xd5\xd1\x1d\x1c\x6e\xed\xb6\x11\x14\x47\xc3\xe3\xec\x92\x9d\x61\xdf\x9c\x15\x96\xf1\x8c\xcd\xbe\xb9\x8d\xf6\xab\x63\x8a\x8c\x20\x89\x91\x3a\x4a\xb0\x01\xa2\x2d\x2b\x92\x60\x6b\x7f\x95\x95\xbd\xca\xda\xb1\x8f\xf0\x1c\xb2\x3e\x6e\x41\x6b\xd9\xf3\x04\x47\x19\xfe\x73\x0e\x1d\xed\x19\x49\x2a\x20\x0e\x6b\x6f\x13\xe8\xef\x44\xa9\xef\x99\xdc\xf4\x6d\x5b\xe4\xd0\x82\xde\xca\x10\x45\x91\x64\x25\xc4\x33\x8a\x21\x74\xca\xdb\xff\x9f\x3c\x59\x97\x64\x16\x87\xbe\x17\x4d\xef\x54\x52\x01\x24\x37\xb5\xf2\xd4\x3c\x2c\x9b\x9a\x9a\xcb\xa6\x36\xa3\x05\x49\x50\xee\xdd\x11\x6d\xc9\xd7\x1d\xb3\xb8\xd4\xd9\x08\xce\x0b\x2e\x87\x56\x1c\x79\xce\xe6\x2e\x79\x47\xda\xc6\x89\x59\x2b\xea\x5c\xbd\xbd\xe0\x07\xf7\xbb\x62\xf2\x67\x94\x3f\x01\x00\x00\xff\xff\x2d\x93\x95\x10\x4d\x03\x00\x00")

func reject_registrationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_reject_registrationHtml,
		"reject_registration.html",
	)
}

func reject_registrationHtml() (*asset, error) {
	bytes, err := reject_registrationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reject_registration.html", size: 845, mode: os.FileMode(0644), modTime: time.Unix(1669674063, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbb, 0x70, 0xc6, 0x1d, 0x25, 0x4d, 0xc1, 0x52, 0x25, 0xb5, 0x31, 0xce, 0x2d, 0x70, 0xb8, 0x93, 0xf6, 0x35, 0x7e, 0x3d, 0x67, 0xa2, 0x58, 0x67, 0x1d, 0xcd, 0xfc, 0xa4, 0x3a, 0xf0, 0xb3, 0x4c}}
	return a, nil
}

var _reject_registrationTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x31\xb3\xd3\x30\x10\x84\x7b\xfd\x8a\xed\x68\x32\xfe\x01\xaf\x82\x47\x66\x20\x0d\x30\x79\x81\xfe\x12\x5d\x62\x31\x92\xce\x9c\x2e\x0e\xe6\x8d\xff\x3b\x23\xd9\x90\x50\xd1\x9e\x77\xd7\xdf\xae\x3e\x72\x8c\x82\xd7\x57\x74\x9f\x28\x31\xe6\x79\xe3\xdc\xd7\x7c\x16\xb5\x6b\x26\xe3\x38\x6d\x60\x3d\xe3\xb0\xdf\xbd\xbc\xc3\x9e\xc7\xc0\x37\x3c\x0b\xa9\x47\x4f\x05\xca\xdf\xf9\x64\xec\x9b\xe6\x2c\x31\xca\x2d\xe4\xcb\xaa\xfe\x10\xe5\x48\x11\xdb\xa0\x7c\x32\xd1\x09\x2f\xac\x63\x38\x31\x94\x2f\xa1\x98\x92\x05\xc9\x50\xfe\x71\xe5\x62\x9d\x73\xbb\xed\x53\x03\xf9\xb6\xdb\x62\x9e\xdd\xbe\xa9\x58\xd9\xdf\x23\x16\xc1\xfd\xcb\x3d\x7b\x9e\xdd\x67\xbd\x50\x0e\xbf\x5a\xec\x22\x7c\xbc\x54\xc5\x7b\x49\x49\x32\x6a\xd3\x45\xb0\x1c\xd6\xe6\xce\x1d\xfa\x0a\x47\x45\x72\x2b\xb4\xa2\xe1\xf6\xd8\x34\x14\x50\x59\xbb\x96\x27\xe7\x16\xa0\xe6\xa9\x11\x5f\x22\x53\x61\x64\x31\x86\xf5\x64\x08\x19\xa2\x9e\x15\x26\x38\x87\x9f\x2d\x78\x50\x39\x46\x4e\x05\x89\x73\x65\x63\x0f\x3a\xca\xc8\x1b\x4c\x72\x7d\x13\x23\x7a\x1a\xb9\x1a\xca\xf5\x98\x82\x81\xfe\x9d\x8c\x86\x81\x29\x76\x58\xff\x55\x38\x7b\xd0\x9f\x33\x44\xd1\xb0\x83\xe4\xb2\x64\x0c\x83\xa8\xbd\x55\xb1\x66\xa7\xd8\x05\xf9\x6b\xf6\x52\x59\xa1\x3c\xc4\x09\xbe\xcd\x19\xa7\x6a\xb3\x3e\x14\x70\xa2\x10\x3b\xe7\x9e\xeb\x0c\xca\x17\x52\x5f\x36\xee\x3f\xcf\x7b\x60\x4a\xee\x77\x00\x00\x00\xff\xff\x97\x9c\xba\xf6\x58\x02\x00\x00")

func reject_registrationTxtBytes() ([]byte, error) {
	return bindataRead(
		_reject_registrationTxt,
		"reject_registration.txt",
	)
}

func reject_registrationTxt() (*asset, error) {
	bytes, err := reject_registrationTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reject_registration.txt", size: 600, mode: os.FileMode(0644), modTime: time.Unix(1669674063, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd6, 0x10, 0x6e, 0x4b, 0x82, 0x8f, 0xe8, 0x4c, 0xe2, 0xdb, 0x62, 0xe5, 0xd6, 0xc9, 0x13, 0xa7, 0xea, 0x1f, 0x1, 0x71, 0x50, 0xb4, 0x88, 0xe7, 0xd8, 0xca, 0xd, 0x82, 0x33, 0xf9, 0xdf, 0x1f}}
	return a, nil
}

var _review_requestHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x5d\x6b\xdb\x4a\x10\x7d\xbe\xfa\x15\x07\x73\xe1\xde\x82\x3f\x68\x1f\x83\x2a\x70\x13\x68\x4d\x53\x08\xb6\x9b\x92\xc7\xb1\x76\x2c\x6d\xb3\xda\x51\x67\xd7\x36\x26\xe4\xbf\x97\x55\xe4\x28\x69\x92\xa7\xbe\xce\x9e\x99\x39\x73\xe6\xcc\xe6\x6d\xf1\x85\x9d\x13\xac\x97\x8b\xd5\x1c\x73\xd3\x58\x1f\xc6\xf9\xac\x2d\xb2\x2c\x6f\x8b\x1f\x8c\x9a\xf6\x0c\xe5\x92\xed\x9e\x0d\x08\x9e\x0f\x3d\xf8\xb3\x93\x0d\x39\x5c\x58\xe5\x32\x8a\x1e\xa1\x5c\xd9\x10\x95\xa2\x15\x0f\xe5\x5f\x3b\x0e\x11\x5b\x95\x06\x84\xeb\xf9\xea\x0a\xb1\xa6\x98\x79\x66\x13\x10\x05\x9b\x54\x77\x6f\xf9\xc0\x66\x8a\x75\xcd\xa7\x14\x51\xd4\x14\xb0\x67\xb5\x5b\xcb\x06\xb1\x66\xab\xe0\x86\xac\x03\x19\xa3\x1c\xc2\xff\x1c\xde\x81\xbc\x79\x42\x2c\xbb\xfa\x7a\xbe\x7a\xff\x01\x2d\x85\x70\x10\x35\xa9\x83\xe1\x52\x8f\x6d\x04\xa1\x64\x8d\x76\x6b\x4b\x8a\x8c\x43\x6d\xcb\x1a\x07\xeb\x5c\xa2\x50\xb1\x67\xa5\xc8\x06\xe2\xdd\x11\x76\x8b\xa3\xec\x40\x6d\xab\xb2\x67\xc4\xda\x86\xac\xe7\x35\xc5\x8d\xec\x50\x92\x47\x22\x0d\xc3\x91\xac\x0b\xa0\x8d\xec\x62\x22\xf9\x7c\x7e\xf1\x5d\xac\x53\x14\xc1\x46\x3e\xcb\x7b\x51\x73\x42\xad\xbc\xfd\x38\xba\xbb\xc3\xb4\x7b\x5f\x76\x32\x7c\x5f\x5e\xe2\xfe\x7e\x54\xbc\x1a\xce\x67\x54\x3c\xae\xe5\x89\x58\xb8\x99\x7f\xbb\x84\x0d\x67\xa7\x47\xe5\xae\xc0\xb2\x7f\x4e\x99\x29\xf6\x90\x27\x0f\xaa\x1e\x21\x0a\xe5\x9f\x5c\xbe\x42\xbc\x2f\x3c\xc6\x2e\x70\xf7\xba\x15\xe7\xe4\x60\x7d\x85\x86\x23\x19\x8a\x74\x6a\xb6\x73\x45\xf6\x4f\xee\x6c\xb1\xb8\x38\x43\x1e\xa2\x8a\xaf\xba\xee\xd7\x8b\x8b\xae\x73\x1f\xca\x67\xce\xf6\xc8\xb5\xdc\xb2\x7f\x0e\xee\x42\x2f\xe1\x40\xc2\x2f\x3b\x6a\xac\x6c\x06\xa3\x3d\x4f\x1f\x10\x83\x13\x5f\x14\xcb\x67\x89\x6b\xaf\x01\x95\x25\xb7\x2f\x27\x1f\x26\x2e\xa5\x69\x92\xbb\x9c\xf5\x8c\x28\xe2\x40\xa1\x97\x61\x10\xba\xc8\x4b\x31\x5c\xfc\x8b\xca\x84\xde\xc8\x98\x58\x0c\xe3\x63\x12\x31\x7a\x3a\xe0\x08\x13\xca\x67\x5d\xd6\xb0\x4a\x79\x6b\x11\x63\x24\x0b\x5a\xc3\xa0\x1e\x92\xb6\xd3\x70\x08\x54\x71\x22\x94\x12\x1c\x85\x08\xd2\x6a\xd7\xb0\x8f\x7f\x47\x6d\x89\x49\x83\xd1\xe8\x4f\x82\x57\x8e\x29\x30\xbc\x44\xee\xee\x37\x9d\xc7\x7f\xce\x21\x9d\x71\xba\xb1\xd0\x72\x99\x1c\xf5\xa0\x9b\xa6\x0d\xc0\x3c\x2e\x82\xbd\x69\xc5\xfa\x88\xad\x68\x07\x39\xbf\x5c\x64\x27\x79\xa3\xe0\x20\x7a\x3b\x7d\xec\xf5\x29\x39\x76\xc9\x15\xa9\x09\xe3\x7c\xa3\x98\x15\xd9\x1b\x7f\xcd\x8a\x75\x6f\x4b\xc6\x9a\xa9\x49\xf9\xbf\x03\x00\x00\xff\xff\x0a\xef\x65\x72\xc9\x04\x00\x00")

func review_requestHtmlBytes() ([]byte, error) {
	return bindataRead(
		_review_requestHtml,
		"review_request.html",
	)
}

func review_requestHtml() (*asset, error) {
	bytes, err := review_requestHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "review_request.html", size: 1225, mode: os.FileMode(0644), modTime: time.Unix(1634667864, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3a, 0xaf, 0xd0, 0xf, 0x60, 0x6c, 0x66, 0x89, 0xd8, 0x30, 0x12, 0x82, 0x14, 0xb6, 0xa2, 0x82, 0xa6, 0x1a, 0x2a, 0x94, 0xca, 0xa2, 0x2b, 0x7a, 0x3e, 0xe8, 0xa6, 0xa1, 0x7a, 0x1a, 0x6a, 0x81}}
	return a, nil
}

var _review_requestTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x41\x6b\x1b\x49\x10\x85\xef\xfd\x2b\x1e\x62\x61\x77\x41\x12\xec\x1e\x7d\x53\x6c\x48\x44\x1c\x30\x23\xc5\xc1\xc7\xf2\xf4\xd3\x4c\xc7\x3d\x5d\x93\xee\x96\x06\x61\xfc\xdf\x43\x8f\xc6\x91\x42\xe2\x43\x6e\xa2\xe6\x75\xd5\x57\xaf\x9e\x3e\xd0\x7b\xc5\xb6\x5a\x6f\x56\x58\xd9\xce\x85\x34\x37\xe6\x0b\xd1\xca\x81\x88\xac\xe9\x0e\xb4\x10\x04\x0e\x93\xea\xbd\xd7\x47\xf1\xb8\x71\x91\x75\xd6\x78\x44\x64\xe3\x52\x8e\x92\x9d\x06\x44\x7e\xdb\x33\x65\xec\xa2\x76\x10\xdc\xaf\x36\x77\xc8\xad\x64\x13\x48\x9b\x90\x15\x8f\xa5\xef\xc1\x71\xa0\x5d\x62\xdb\xf2\xf5\x89\x46\xb4\x92\x70\x60\x74\x3b\x47\x8b\xdc\xd2\x45\xb0\x13\xe7\x21\xd6\x46\xa6\xf4\x0f\xd3\xbf\x90\x60\x2f\xc0\xcc\xdd\xc7\xeb\xcd\x7f\xff\xa3\x97\x94\x06\x8d\xb6\x4c\xb0\xac\xe3\xb1\xcf\x10\xd4\x8c\xd9\xed\x5c\x2d\x99\x18\x5a\x57\xb7\x18\x9c\xf7\x05\xa1\x61\x60\x94\x4c\x0b\x0d\xfe\x08\xb7\xc3\x51\xf7\x90\xbe\x8f\x7a\x20\x72\xeb\x92\x99\xb8\x96\x78\xd0\x3d\x6a\x09\x28\xd0\xb0\xcc\xe2\x7c\x82\x3c\xea\x3e\x17\xc8\x9f\xf7\xd7\x30\xd6\x46\x2b\x91\x5c\xe6\x95\x31\xcf\xcf\x58\x8e\x85\x6a\xdc\xfb\x73\x75\x8b\x97\x17\x63\x2e\x76\xc7\xc3\xea\xd3\x2d\x5c\x9a\xc4\xd5\x54\x1d\x55\x7a\xb2\xe4\x08\x8d\x88\xfc\xca\xfa\x37\x53\xa7\x36\x73\xec\x13\xc7\xaf\x3b\xf5\x5e\x07\x17\x1a\x74\xcc\x62\x25\xcb\x95\x31\xeb\x9b\x2b\x94\xf6\xf7\xeb\x9b\xd2\x7a\xab\x4f\x0c\xa7\xca\xf8\xb3\xd4\xaa\xb1\x2b\x23\xed\xf9\xc0\x27\xc9\xf9\xcb\xf9\xf2\x13\x9f\xd4\x35\xfb\x5f\xa9\xce\x34\xb5\x76\x5d\x39\x9b\x77\x81\xc8\xaa\x1e\x92\x26\xc4\xb2\xf2\x5f\x68\x6c\x9a\x42\x81\x85\xbb\x60\xc4\x22\x63\x76\x09\x38\xc3\x42\xc6\x99\x6f\x38\x31\x47\x39\xa0\xb3\x84\x4c\x92\x62\x4f\xc7\x94\xa4\x61\x99\x5a\x1e\x78\x49\x19\x12\x9b\x7d\xc7\x90\xff\x78\x7e\x85\x45\x87\xd9\xcc\x98\x3b\x4f\x49\x44\xd0\xcc\x31\xe2\x25\x41\x7f\x7b\x8f\x92\xf4\x12\xc3\xd4\xb3\x2e\x77\x3b\x39\x10\x8b\x69\xb0\x3f\xbc\x63\xb0\xbd\xba\x90\xb1\xd3\x38\x4a\xae\x6f\xd7\xe6\xd5\xa8\xac\x18\x34\x3e\x2d\x8d\x79\x57\x72\x50\xb1\x91\x68\xd3\xdc\xbc\xf1\x0f\xdc\x30\x1e\x5c\x4d\x6c\x29\x9d\xf9\x1e\x00\x00\xff\xff\x86\xa5\x27\x98\xd2\x03\x00\x00")

func review_requestTxtBytes() ([]byte, error) {
	return bindataRead(
		_review_requestTxt,
		"review_request.txt",
	)
}

func review_requestTxt() (*asset, error) {
	bytes, err := review_requestTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "review_request.txt", size: 978, mode: os.FileMode(0644), modTime: time.Unix(1634667864, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8a, 0x58, 0xb6, 0xd4, 0x10, 0xd8, 0x3d, 0xe1, 0xce, 0x64, 0x58, 0x97, 0x33, 0xa8, 0xef, 0x45, 0xf5, 0xa7, 0xc7, 0xd5, 0x9f, 0xe4, 0x56, 0xdb, 0xc2, 0xa5, 0xc5, 0xec, 0x21, 0xc1, 0xa3, 0xe5}}
	return a, nil
}

var _verify_contactHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x4f\x8b\xdb\x40\x0c\xc5\xef\xfe\x14\x22\x97\x5e\x52\xfb\x1e\x5c\xd3\x7f\xd0\x2e\x94\x1e\x36\xd9\xde\xe5\xb1\x12\x0f\x19\x8f\xa6\x92\x9c\x60\x16\x7f\xf7\x32\x1e\x48\xf7\xb0\x37\xf3\x24\x4b\xbf\xf7\x34\x6d\xea\x7e\x52\x08\x0c\xaf\xaf\x50\xff\xc6\x89\x60\x5d\xf7\x6d\x93\xba\xaa\x6a\x53\x77\x1a\x31\x5e\x61\xe1\x19\xce\x2c\xa0\x73\x3f\x79\x33\x1f\x2f\x80\x70\x7a\x7e\x3a\x7e\x81\x48\x76\x67\xb9\x82\xd0\xc5\xab\x09\x9a\xe7\x08\x42\x7f\x67\x52\xab\xe1\xc4\xd0\xd3\xc5\x47\xb0\x91\x40\xe8\xe6\xe9\x5e\x25\x61\x47\xaa\x7b\x48\x81\x50\x09\x5a\x84\x51\xe8\xfc\x69\x97\x01\xfe\x90\xf8\xf3\xf2\x8d\xa3\xa1\xb3\x97\xe7\x5f\xb0\xae\xbb\xee\xb6\x89\x99\x42\x80\x26\xf4\x01\xfa\x05\x5c\xf0\xee\x9a\x49\x6c\xf4\x5a\x05\x1f\xaf\x75\xdb\x60\x57\xc8\x9f\xce\x1b\xb3\xc3\x18\xd9\x4a\x2b\x70\xa1\xc8\x9d\x8f\xdd\x8e\xd3\x02\x18\x07\x48\xa8\x46\x8f\x3a\xf4\x14\xf8\x0e\x3e\x1a\x6f\x5b\xab\x5e\xf8\xae\x24\x80\xc3\x20\xa4\x0a\x3d\xca\xe1\x91\x51\xeb\x78\xa0\xee\x3d\xfa\x97\x48\x31\x17\x07\x58\xd7\xb6\xd9\xda\xde\xf2\x7d\x10\x82\x11\x6f\x9b\x09\xe1\xb9\x0f\x04\xc5\x6a\x56\x36\xb7\xae\x8c\x2a\xae\xdf\x50\x17\x35\xe3\x96\x2b\xe0\x30\xf9\xa8\x15\xda\xff\x34\xf3\x1f\xc6\x07\x9d\x53\x62\xb1\xcf\xc2\xb6\xdd\x06\x43\xed\x79\xd7\xbd\x2b\xe7\xfc\x80\x25\x27\x55\x96\x4f\xd3\x1c\xbd\x2d\xd5\x63\xe8\x68\x96\xf4\xd0\x34\x26\x5e\xf1\x63\x3e\xbc\x26\x74\x54\x6b\x40\x77\xad\x1d\x4f\xbb\xee\x98\x3f\xc1\x8d\x18\x23\x85\x3c\xb1\xde\x42\xfa\x4a\x6a\xf9\x91\xa0\x0c\xba\x6f\x7b\x81\xa6\xab\x0a\xfb\x8f\xc0\x3d\x06\xf8\xee\x85\x9c\xb1\x2c\x70\x24\xb9\x79\x47\x70\x22\x9c\xb6\xb8\xfe\x05\x00\x00\xff\xff\xee\x12\x41\x68\xa3\x02\x00\x00")

func verify_contactHtmlBytes() ([]byte, error) {
	return bindataRead(
		_verify_contactHtml,
		"verify_contact.html",
	)
}

func verify_contactHtml() (*asset, error) {
	bytes, err := verify_contactHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "verify_contact.html", size: 675, mode: os.FileMode(0644), modTime: time.Unix(1721689071, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3c, 0x52, 0x65, 0x75, 0xd2, 0x79, 0x85, 0xc3, 0x4f, 0xf4, 0xcd, 0x35, 0x36, 0x90, 0x89, 0x50, 0x8e, 0x56, 0x0, 0x3c, 0x4, 0x25, 0x5d, 0x98, 0xee, 0xb3, 0x7, 0x4f, 0xd9, 0x71, 0x3d, 0xbd}}
	return a, nil
}

var _verify_contactTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\xbd\x8e\xdb\x4a\x0c\x85\xfb\x79\x8a\xd3\xdd\xc6\x57\x0f\x90\x2a\x7f\x40\xb2\x40\x90\x62\xed\x4d\x4f\x8d\x68\x8b\xd0\x68\xa8\x90\x94\x0d\x61\xa1\x77\x0f\x24\x25\x8b\x14\x69\x39\x1c\x7e\xdf\x21\xbf\x72\x29\x8a\xd7\x57\x34\xdf\x69\x64\xac\xeb\x29\xa5\x4b\x4f\x75\xc0\xa2\x33\xae\x6a\xf0\xb9\x1d\x25\x42\xea\x0d\x84\xcb\xf3\xd3\xf9\x03\x2a\xc7\x43\x6d\x80\xf1\x4d\x3c\x8c\x42\xb4\xc2\xf8\xe7\xcc\x1e\x0d\x2e\x8a\x96\x6f\x52\x11\x3d\xc3\xf8\x2e\xfc\xc0\x64\x9a\xd9\xfd\x84\xa9\x30\x39\xef\xc0\x1f\x6c\x72\x5d\x3e\x69\x0d\xca\xf1\xf2\xfc\x0d\xeb\x8a\xfb\x5e\xdb\xd8\x06\x1e\x49\x0a\xda\x05\xb9\x48\x1e\x36\x7e\xf4\xe2\x28\x52\x87\x26\xa5\xa7\xeb\x6e\x98\xa9\x56\x8d\xa3\x05\x7a\x30\xb7\x8e\x37\x52\xd6\x69\x01\xd5\x0e\x13\x79\xf0\xdb\x3b\x5a\x2e\xfa\x80\xd4\xd0\x83\xd6\x9a\x3e\x9c\x0d\xd4\x75\xc6\xee\x68\xc9\xde\xa5\xf4\x2f\xcf\x97\xca\x35\x6b\xc7\x1d\xd6\xf5\x8f\xc7\x7f\xc6\xe8\xe9\xbe\x4b\x9a\xce\x6d\xe1\xdf\x51\xb6\xca\x3e\x3f\x1f\xff\x8f\x54\x7f\xd9\x1d\xd5\x4d\xeb\xd8\x2d\x75\xa3\x54\x07\x05\x7c\x9e\x26\xb5\x78\x6f\x1a\xfb\x86\xa9\x34\xa2\x50\xdb\x62\x1e\x13\xc7\x71\xae\x12\x0b\xce\x85\xf2\x80\xdc\x53\xad\x5c\x10\x26\x4e\xff\x6f\x07\xf2\x89\x32\x37\xbe\xbd\x36\x59\xc7\x26\xa5\x8f\xec\xb1\x9d\x8d\xac\xf3\x53\x3a\x88\x5f\x8a\xb6\x54\xf0\x59\x8c\x73\xa8\x2d\x38\xb3\xdd\x25\x33\x2e\x4c\x63\xfa\x15\x00\x00\xff\xff\xb0\x26\xe3\xf8\x21\x02\x00\x00")

func verify_contactTxtBytes() ([]byte, error) {
	return bindataRead(
		_verify_contactTxt,
		"verify_contact.txt",
	)
}

func verify_contactTxt() (*asset, error) {
	bytes, err := verify_contactTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "verify_contact.txt", size: 545, mode: os.FileMode(0644), modTime: time.Unix(1721689071, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0xc5, 0xb5, 0xc8, 0x8e, 0xa6, 0x30, 0x45, 0xc2, 0x82, 0x58, 0x11, 0xa7, 0xa2, 0x85, 0x26, 0x6f, 0x56, 0x1f, 0xb3, 0x18, 0x37, 0x2c, 0x4f, 0xd0, 0x4b, 0x10, 0x96, 0xe5, 0xdd, 0x86, 0xb9}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"deliver_certs.html":                 deliver_certsHtml,
	"deliver_certs.txt":                  deliver_certsTxt,
	"expires_admin_notification.html":    expires_admin_notificationHtml,
	"expires_admin_notification.txt":     expires_admin_notificationTxt,
	"reissuance_admin_notification.html": reissuance_admin_notificationHtml,
	"reissuance_admin_notification.txt":  reissuance_admin_notificationTxt,
	"reissuance_reminder.html":           reissuance_reminderHtml,
	"reissuance_reminder.txt":            reissuance_reminderTxt,
	"reissuance_started.html":            reissuance_startedHtml,
	"reissuance_started.txt":             reissuance_startedTxt,
	"reject_registration.html":           reject_registrationHtml,
	"reject_registration.txt":            reject_registrationTxt,
	"review_request.html":                review_requestHtml,
	"review_request.txt":                 review_requestTxt,
	"verify_contact.html":                verify_contactHtml,
	"verify_contact.txt":                 verify_contactTxt,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"deliver_certs.html": {deliver_certsHtml, map[string]*bintree{}},
	"deliver_certs.txt": {deliver_certsTxt, map[string]*bintree{}},
	"expires_admin_notification.html": {expires_admin_notificationHtml, map[string]*bintree{}},
	"expires_admin_notification.txt": {expires_admin_notificationTxt, map[string]*bintree{}},
	"reissuance_admin_notification.html": {reissuance_admin_notificationHtml, map[string]*bintree{}},
	"reissuance_admin_notification.txt": {reissuance_admin_notificationTxt, map[string]*bintree{}},
	"reissuance_reminder.html": {reissuance_reminderHtml, map[string]*bintree{}},
	"reissuance_reminder.txt": {reissuance_reminderTxt, map[string]*bintree{}},
	"reissuance_started.html": {reissuance_startedHtml, map[string]*bintree{}},
	"reissuance_started.txt": {reissuance_startedTxt, map[string]*bintree{}},
	"reject_registration.html": {reject_registrationHtml, map[string]*bintree{}},
	"reject_registration.txt": {reject_registrationTxt, map[string]*bintree{}},
	"review_request.html": {review_requestHtml, map[string]*bintree{}},
	"review_request.txt": {review_requestTxt, map[string]*bintree{}},
	"verify_contact.html": {verify_contactHtml, map[string]*bintree{}},
	"verify_contact.txt": {verify_contactTxt, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
