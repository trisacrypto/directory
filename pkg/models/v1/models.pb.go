// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: gds/models/v1/models.proto

package models

import (
	v1beta1 "github.com/trisacrypto/trisa/pkg/trisa/gds/models/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GDSExtraData contains all GDS-specific extra data for a VASP record.
type GDSExtraData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Temporary: verification token for light weight authentication for verification
	// TODO: replace with admin API that uses authentication
	AdminVerificationToken string `protobuf:"bytes,1,opt,name=admin_verification_token,json=adminVerificationToken,proto3" json:"admin_verification_token,omitempty"`
	// Audit log which records events relevant to a VASP
	AuditLog []*AuditLogEntry `protobuf:"bytes,2,rep,name=audit_log,json=auditLog,proto3" json:"audit_log,omitempty"`
	// Record of all the review notes associated with this VASP
	ReviewNotes map[string]*ReviewNote `protobuf:"bytes,3,rep,name=review_notes,json=reviewNotes,proto3" json:"review_notes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Certificate requests associated with this VASP
	CertificateRequests []string `protobuf:"bytes,4,rep,name=certificate_requests,json=certificateRequests,proto3" json:"certificate_requests,omitempty"`
	// Certificate IDs associated with this VASP
	Certificates []string `protobuf:"bytes,5,rep,name=certificates,proto3" json:"certificates,omitempty"`
	// Log which records emails sent to the TRISA admins regarding this VASP
	EmailLog []*EmailLogEntry `protobuf:"bytes,6,rep,name=email_log,json=emailLog,proto3" json:"email_log,omitempty"`
}

func (x *GDSExtraData) Reset() {
	*x = GDSExtraData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gds_models_v1_models_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GDSExtraData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GDSExtraData) ProtoMessage() {}

func (x *GDSExtraData) ProtoReflect() protoreflect.Message {
	mi := &file_gds_models_v1_models_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GDSExtraData.ProtoReflect.Descriptor instead.
func (*GDSExtraData) Descriptor() ([]byte, []int) {
	return file_gds_models_v1_models_proto_rawDescGZIP(), []int{0}
}

func (x *GDSExtraData) GetAdminVerificationToken() string {
	if x != nil {
		return x.AdminVerificationToken
	}
	return ""
}

func (x *GDSExtraData) GetAuditLog() []*AuditLogEntry {
	if x != nil {
		return x.AuditLog
	}
	return nil
}

func (x *GDSExtraData) GetReviewNotes() map[string]*ReviewNote {
	if x != nil {
		return x.ReviewNotes
	}
	return nil
}

func (x *GDSExtraData) GetCertificateRequests() []string {
	if x != nil {
		return x.CertificateRequests
	}
	return nil
}

func (x *GDSExtraData) GetCertificates() []string {
	if x != nil {
		return x.Certificates
	}
	return nil
}

func (x *GDSExtraData) GetEmailLog() []*EmailLogEntry {
	if x != nil {
		return x.EmailLog
	}
	return nil
}

// AuditLogEntry contains information about an event relevant to a VASP
// (e.g., verification state changes).
type AuditLogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// RFC3339 timestamp
	Timestamp string `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Previous verification state (handled internally) and current verification state
	PreviousState v1beta1.VerificationState `protobuf:"varint,2,opt,name=previous_state,json=previousState,proto3,enum=trisa.gds.models.v1beta1.VerificationState" json:"previous_state,omitempty"`
	CurrentState  v1beta1.VerificationState `protobuf:"varint,3,opt,name=current_state,json=currentState,proto3,enum=trisa.gds.models.v1beta1.VerificationState" json:"current_state,omitempty"`
	// Description which can be supplied by the Admin when making a state change
	// (e.g., "resent emails")
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Email address of the Admin who made the state change, "automated" if the state
	// change happened automatically
	Source string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *AuditLogEntry) Reset() {
	*x = AuditLogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gds_models_v1_models_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogEntry) ProtoMessage() {}

func (x *AuditLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_gds_models_v1_models_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogEntry.ProtoReflect.Descriptor instead.
func (*AuditLogEntry) Descriptor() ([]byte, []int) {
	return file_gds_models_v1_models_proto_rawDescGZIP(), []int{1}
}

func (x *AuditLogEntry) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *AuditLogEntry) GetPreviousState() v1beta1.VerificationState {
	if x != nil {
		return x.PreviousState
	}
	return v1beta1.VerificationState(0)
}

func (x *AuditLogEntry) GetCurrentState() v1beta1.VerificationState {
	if x != nil {
		return x.CurrentState
	}
	return v1beta1.VerificationState(0)
}

func (x *AuditLogEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AuditLogEntry) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// GDSContactExtraData contains all GDS-specific extra data for a Contact record.
type GDSContactExtraData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Token for email verification
	Verified bool   `protobuf:"varint,1,opt,name=verified,proto3" json:"verified,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// Email audit log
	EmailLog []*EmailLogEntry `protobuf:"bytes,3,rep,name=email_log,json=emailLog,proto3" json:"email_log,omitempty"`
}

func (x *GDSContactExtraData) Reset() {
	*x = GDSContactExtraData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gds_models_v1_models_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GDSContactExtraData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GDSContactExtraData) ProtoMessage() {}

func (x *GDSContactExtraData) ProtoReflect() protoreflect.Message {
	mi := &file_gds_models_v1_models_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GDSContactExtraData.ProtoReflect.Descriptor instead.
func (*GDSContactExtraData) Descriptor() ([]byte, []int) {
	return file_gds_models_v1_models_proto_rawDescGZIP(), []int{2}
}

func (x *GDSContactExtraData) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *GDSContactExtraData) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GDSContactExtraData) GetEmailLog() []*EmailLogEntry {
	if x != nil {
		return x.EmailLog
	}
	return nil
}

type ReviewNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the note
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// RFC3339 timestamps representing when the note was created, modified
	Created  string `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Modified string `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// Email address of the author and the last editor
	Author string `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Editor string `protobuf:"bytes,5,opt,name=editor,proto3" json:"editor,omitempty"`
	// Actual text in the note
	Text string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ReviewNote) Reset() {
	*x = ReviewNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gds_models_v1_models_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewNote) ProtoMessage() {}

func (x *ReviewNote) ProtoReflect() protoreflect.Message {
	mi := &file_gds_models_v1_models_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewNote.ProtoReflect.Descriptor instead.
func (*ReviewNote) Descriptor() ([]byte, []int) {
	return file_gds_models_v1_models_proto_rawDescGZIP(), []int{3}
}

func (x *ReviewNote) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReviewNote) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *ReviewNote) GetModified() string {
	if x != nil {
		return x.Modified
	}
	return ""
}

func (x *ReviewNote) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ReviewNote) GetEditor() string {
	if x != nil {
		return x.Editor
	}
	return ""
}

func (x *ReviewNote) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Implements a protocol buffer struct for state managed pagination. This struct will be
// marshaled into a url-safe base64 encoded string and sent to the user as the
// next_page_token. The server should decode this struct to determine where to continue
// iteration for the next page. Note that the server should check to make sure the page
// size in the cursor matches the page size in the request.
// See https://cloud.google.com/apis/design/design_patterns#list_pagination for more.
type PageCursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // the number of results returned on each iteration.
	NextVasp string `protobuf:"bytes,2,opt,name=next_vasp,json=nextVasp,proto3" json:"next_vasp,omitempty"`  // the VASP id to start the iteration from
}

func (x *PageCursor) Reset() {
	*x = PageCursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gds_models_v1_models_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageCursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageCursor) ProtoMessage() {}

func (x *PageCursor) ProtoReflect() protoreflect.Message {
	mi := &file_gds_models_v1_models_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageCursor.ProtoReflect.Descriptor instead.
func (*PageCursor) Descriptor() ([]byte, []int) {
	return file_gds_models_v1_models_proto_rawDescGZIP(), []int{4}
}

func (x *PageCursor) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageCursor) GetNextVasp() string {
	if x != nil {
		return x.NextVasp
	}
	return ""
}

var File_gds_models_v1_models_proto protoreflect.FileDescriptor

var file_gds_models_v1_models_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x67, 0x64, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x67, 0x64,
	0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x64, 0x73,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x74, 0x72, 0x69, 0x73, 0x61,
	0x2f, 0x67, 0x64, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc1, 0x03, 0x0a, 0x0c, 0x47, 0x44, 0x53, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x09, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x64, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x4f, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67,
	0x64, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x44, 0x53,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x4e, 0x6f, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x12, 0x39,
	0x0a, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x64, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x1a, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x64, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x8d, 0x02, 0x0a, 0x0d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x52, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x74,
	0x72, 0x69, 0x73, 0x61, 0x2e, 0x67, 0x64, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x74, 0x72, 0x69, 0x73, 0x61, 0x2e, 0x67, 0x64, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x47, 0x44, 0x53, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39,
	0x0a, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x64, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x22, 0x96, 0x01, 0x0a, 0x0a, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x46, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x56, 0x61, 0x73, 0x70, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x69, 0x73, 0x61, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gds_models_v1_models_proto_rawDescOnce sync.Once
	file_gds_models_v1_models_proto_rawDescData = file_gds_models_v1_models_proto_rawDesc
)

func file_gds_models_v1_models_proto_rawDescGZIP() []byte {
	file_gds_models_v1_models_proto_rawDescOnce.Do(func() {
		file_gds_models_v1_models_proto_rawDescData = protoimpl.X.CompressGZIP(file_gds_models_v1_models_proto_rawDescData)
	})
	return file_gds_models_v1_models_proto_rawDescData
}

var file_gds_models_v1_models_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_gds_models_v1_models_proto_goTypes = []interface{}{
	(*GDSExtraData)(nil),           // 0: gds.models.v1.GDSExtraData
	(*AuditLogEntry)(nil),          // 1: gds.models.v1.AuditLogEntry
	(*GDSContactExtraData)(nil),    // 2: gds.models.v1.GDSContactExtraData
	(*ReviewNote)(nil),             // 3: gds.models.v1.ReviewNote
	(*PageCursor)(nil),             // 4: gds.models.v1.PageCursor
	nil,                            // 5: gds.models.v1.GDSExtraData.ReviewNotesEntry
	(*EmailLogEntry)(nil),          // 6: gds.models.v1.EmailLogEntry
	(v1beta1.VerificationState)(0), // 7: trisa.gds.models.v1beta1.VerificationState
}
var file_gds_models_v1_models_proto_depIdxs = []int32{
	1, // 0: gds.models.v1.GDSExtraData.audit_log:type_name -> gds.models.v1.AuditLogEntry
	5, // 1: gds.models.v1.GDSExtraData.review_notes:type_name -> gds.models.v1.GDSExtraData.ReviewNotesEntry
	6, // 2: gds.models.v1.GDSExtraData.email_log:type_name -> gds.models.v1.EmailLogEntry
	7, // 3: gds.models.v1.AuditLogEntry.previous_state:type_name -> trisa.gds.models.v1beta1.VerificationState
	7, // 4: gds.models.v1.AuditLogEntry.current_state:type_name -> trisa.gds.models.v1beta1.VerificationState
	6, // 5: gds.models.v1.GDSContactExtraData.email_log:type_name -> gds.models.v1.EmailLogEntry
	3, // 6: gds.models.v1.GDSExtraData.ReviewNotesEntry.value:type_name -> gds.models.v1.ReviewNote
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_gds_models_v1_models_proto_init() }
func file_gds_models_v1_models_proto_init() {
	if File_gds_models_v1_models_proto != nil {
		return
	}
	file_gds_models_v1_contacts_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gds_models_v1_models_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GDSExtraData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gds_models_v1_models_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gds_models_v1_models_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GDSContactExtraData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gds_models_v1_models_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gds_models_v1_models_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageCursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gds_models_v1_models_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gds_models_v1_models_proto_goTypes,
		DependencyIndexes: file_gds_models_v1_models_proto_depIdxs,
		MessageInfos:      file_gds_models_v1_models_proto_msgTypes,
	}.Build()
	File_gds_models_v1_models_proto = out.File
	file_gds_models_v1_models_proto_rawDesc = nil
	file_gds_models_v1_models_proto_goTypes = nil
	file_gds_models_v1_models_proto_depIdxs = nil
}
